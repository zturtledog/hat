/* automatically generated by rust-bindgen 0.54.1 */





































extern "C" {
    pub static mut glad_glCullFace: PFNGLCULLFACEPROC;
}
pub type PFNGLFRONTFACEPROC = ::std::option::Option<unsafe extern "C" fn(mode: GLenum)>;
extern "C" {
    pub static mut glad_glFrontFace: PFNGLFRONTFACEPROC;
}
pub type PFNGLHINTPROC = ::std::option::Option<unsafe extern "C" fn(target: GLenum, mode: GLenum)>;
extern "C" {
    pub static mut glad_glHint: PFNGLHINTPROC;
}
pub type PFNGLLINEWIDTHPROC = ::std::option::Option<unsafe extern "C" fn(width: GLfloat)>;
extern "C" {
    pub static mut glad_glLineWidth: PFNGLLINEWIDTHPROC;
}
pub type PFNGLPOINTSIZEPROC = ::std::option::Option<unsafe extern "C" fn(size: GLfloat)>;
extern "C" {
    pub static mut glad_glPointSize: PFNGLPOINTSIZEPROC;
}
pub type PFNGLPOLYGONMODEPROC =
    ::std::option::Option<unsafe extern "C" fn(face: GLenum, mode: GLenum)>;
extern "C" {
    pub static mut glad_glPolygonMode: PFNGLPOLYGONMODEPROC;
}
pub type PFNGLSCISSORPROC = ::std::option::Option<
    unsafe extern "C" fn(x: GLint, y: GLint, width: GLsizei, height: GLsizei),
>;
extern "C" {
    pub static mut glad_glScissor: PFNGLSCISSORPROC;
}
pub type PFNGLTEXPARAMETERFPROC =
    ::std::option::Option<unsafe extern "C" fn(target: GLenum, pname: GLenum, param: GLfloat)>;
extern "C" {
    pub static mut glad_glTexParameterf: PFNGLTEXPARAMETERFPROC;
}
pub type PFNGLTEXPARAMETERFVPROC = ::std::option::Option<
    unsafe extern "C" fn(target: GLenum, pname: GLenum, params: *const GLfloat),
>;
extern "C" {
    pub static mut glad_glTexParameterfv: PFNGLTEXPARAMETERFVPROC;
}
pub type PFNGLTEXPARAMETERIPROC =
    ::std::option::Option<unsafe extern "C" fn(target: GLenum, pname: GLenum, param: GLint)>;
extern "C" {
    pub static mut glad_glTexParameteri: PFNGLTEXPARAMETERIPROC;
}
pub type PFNGLTEXPARAMETERIVPROC = ::std::option::Option<
    unsafe extern "C" fn(target: GLenum, pname: GLenum, params: *const GLint),
>;
extern "C" {
    pub static mut glad_glTexParameteriv: PFNGLTEXPARAMETERIVPROC;
}
pub type PFNGLTEXIMAGE1DPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        level: GLint,
        internalformat: GLint,
        width: GLsizei,
        border: GLint,
        format: GLenum,
        type_: GLenum,
        pixels: *const ::std::os::raw::c_void,
    ),
>;
extern "C" {
    pub static mut glad_glTexImage1D: PFNGLTEXIMAGE1DPROC;
}
pub type PFNGLTEXIMAGE2DPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        level: GLint,
        internalformat: GLint,
        width: GLsizei,
        height: GLsizei,
        border: GLint,
        format: GLenum,
        type_: GLenum,
        pixels: *const ::std::os::raw::c_void,
    ),
>;
extern "C" {
    pub static mut glad_glTexImage2D: PFNGLTEXIMAGE2DPROC;
}
pub type PFNGLDRAWBUFFERPROC = ::std::option::Option<unsafe extern "C" fn(buf: GLenum)>;
extern "C" {
    pub static mut glad_glDrawBuffer: PFNGLDRAWBUFFERPROC;
}
pub type PFNGLCLEARPROC = ::std::option::Option<unsafe extern "C" fn(mask: GLbitfield)>;
extern "C" {
    pub static mut glad_glClear: PFNGLCLEARPROC;
}
pub type PFNGLCLEARCOLORPROC = ::std::option::Option<
    unsafe extern "C" fn(red: GLfloat, green: GLfloat, blue: GLfloat, alpha: GLfloat),
>;
extern "C" {
    pub static mut glad_glClearColor: PFNGLCLEARCOLORPROC;
}
pub type PFNGLCLEARSTENCILPROC = ::std::option::Option<unsafe extern "C" fn(s: GLint)>;
extern "C" {
    pub static mut glad_glClearStencil: PFNGLCLEARSTENCILPROC;
}
pub type PFNGLCLEARDEPTHPROC = ::std::option::Option<unsafe extern "C" fn(depth: GLdouble)>;
extern "C" {
    pub static mut glad_glClearDepth: PFNGLCLEARDEPTHPROC;
}
pub type PFNGLSTENCILMASKPROC = ::std::option::Option<unsafe extern "C" fn(mask: GLuint)>;
extern "C" {
    pub static mut glad_glStencilMask: PFNGLSTENCILMASKPROC;
}
pub type PFNGLCOLORMASKPROC = ::std::option::Option<
    unsafe extern "C" fn(red: GLboolean, green: GLboolean, blue: GLboolean, alpha: GLboolean),
>;
extern "C" {
    pub static mut glad_glColorMask: PFNGLCOLORMASKPROC;
}
pub type PFNGLDEPTHMASKPROC = ::std::option::Option<unsafe extern "C" fn(flag: GLboolean)>;
extern "C" {
    pub static mut glad_glDepthMask: PFNGLDEPTHMASKPROC;
}
pub type PFNGLDISABLEPROC = ::std::option::Option<unsafe extern "C" fn(cap: GLenum)>;
extern "C" {
    pub static mut glad_glDisable: PFNGLDISABLEPROC;
}
pub type PFNGLENABLEPROC = ::std::option::Option<unsafe extern "C" fn(cap: GLenum)>;
extern "C" {
    pub static mut glad_glEnable: PFNGLENABLEPROC;
}
pub type PFNGLFINISHPROC = ::std::option::Option<unsafe extern "C" fn()>;
extern "C" {
    pub static mut glad_glFinish: PFNGLFINISHPROC;
}
pub type PFNGLFLUSHPROC = ::std::option::Option<unsafe extern "C" fn()>;
extern "C" {
    pub static mut glad_glFlush: PFNGLFLUSHPROC;
}
pub type PFNGLBLENDFUNCPROC =
    ::std::option::Option<unsafe extern "C" fn(sfactor: GLenum, dfactor: GLenum)>;
extern "C" {
    pub static mut glad_glBlendFunc: PFNGLBLENDFUNCPROC;
}
pub type PFNGLLOGICOPPROC = ::std::option::Option<unsafe extern "C" fn(opcode: GLenum)>;
extern "C" {
    pub static mut glad_glLogicOp: PFNGLLOGICOPPROC;
}
pub type PFNGLSTENCILFUNCPROC =
    ::std::option::Option<unsafe extern "C" fn(func: GLenum, ref_: GLint, mask: GLuint)>;
extern "C" {
    pub static mut glad_glStencilFunc: PFNGLSTENCILFUNCPROC;
}
pub type PFNGLSTENCILOPPROC =
    ::std::option::Option<unsafe extern "C" fn(fail: GLenum, zfail: GLenum, zpass: GLenum)>;
extern "C" {
    pub static mut glad_glStencilOp: PFNGLSTENCILOPPROC;
}
pub type PFNGLDEPTHFUNCPROC = ::std::option::Option<unsafe extern "C" fn(func: GLenum)>;
extern "C" {
    pub static mut glad_glDepthFunc: PFNGLDEPTHFUNCPROC;
}
pub type PFNGLPIXELSTOREFPROC =
    ::std::option::Option<unsafe extern "C" fn(pname: GLenum, param: GLfloat)>;
extern "C" {
    pub static mut glad_glPixelStoref: PFNGLPIXELSTOREFPROC;
}
pub type PFNGLPIXELSTOREIPROC =
    ::std::option::Option<unsafe extern "C" fn(pname: GLenum, param: GLint)>;
extern "C" {
    pub static mut glad_glPixelStorei: PFNGLPIXELSTOREIPROC;
}
pub type PFNGLREADBUFFERPROC = ::std::option::Option<unsafe extern "C" fn(src: GLenum)>;
extern "C" {
    pub static mut glad_glReadBuffer: PFNGLREADBUFFERPROC;
}
pub type PFNGLREADPIXELSPROC = ::std::option::Option<
    unsafe extern "C" fn(
        x: GLint,
        y: GLint,
        width: GLsizei,
        height: GLsizei,
        format: GLenum,
        type_: GLenum,
        pixels: *mut ::std::os::raw::c_void,
    ),
>;
extern "C" {
    pub static mut glad_glReadPixels: PFNGLREADPIXELSPROC;
}
pub type PFNGLGETBOOLEANVPROC =
    ::std::option::Option<unsafe extern "C" fn(pname: GLenum, data: *mut GLboolean)>;
extern "C" {
    pub static mut glad_glGetBooleanv: PFNGLGETBOOLEANVPROC;
}
pub type PFNGLGETDOUBLEVPROC =
    ::std::option::Option<unsafe extern "C" fn(pname: GLenum, data: *mut GLdouble)>;
extern "C" {
    pub static mut glad_glGetDoublev: PFNGLGETDOUBLEVPROC;
}
pub type PFNGLGETERRORPROC = ::std::option::Option<unsafe extern "C" fn() -> GLenum>;
extern "C" {
    pub static mut glad_glGetError: PFNGLGETERRORPROC;
}
pub type PFNGLGETFLOATVPROC =
    ::std::option::Option<unsafe extern "C" fn(pname: GLenum, data: *mut GLfloat)>;
extern "C" {
    pub static mut glad_glGetFloatv: PFNGLGETFLOATVPROC;
}
pub type PFNGLGETINTEGERVPROC =
    ::std::option::Option<unsafe extern "C" fn(pname: GLenum, data: *mut GLint)>;
extern "C" {
    pub static mut glad_glGetIntegerv: PFNGLGETINTEGERVPROC;
}
pub type PFNGLGETSTRINGPROC =
    ::std::option::Option<unsafe extern "C" fn(name: GLenum) -> *const GLubyte>;
extern "C" {
    pub static mut glad_glGetString: PFNGLGETSTRINGPROC;
}
pub type PFNGLGETTEXIMAGEPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        level: GLint,
        format: GLenum,
        type_: GLenum,
        pixels: *mut ::std::os::raw::c_void,
    ),
>;
extern "C" {
    pub static mut glad_glGetTexImage: PFNGLGETTEXIMAGEPROC;
}
pub type PFNGLGETTEXPARAMETERFVPROC = ::std::option::Option<
    unsafe extern "C" fn(target: GLenum, pname: GLenum, params: *mut GLfloat),
>;
extern "C" {
    pub static mut glad_glGetTexParameterfv: PFNGLGETTEXPARAMETERFVPROC;
}
pub type PFNGLGETTEXPARAMETERIVPROC =
    ::std::option::Option<unsafe extern "C" fn(target: GLenum, pname: GLenum, params: *mut GLint)>;
extern "C" {
    pub static mut glad_glGetTexParameteriv: PFNGLGETTEXPARAMETERIVPROC;
}
pub type PFNGLGETTEXLEVELPARAMETERFVPROC = ::std::option::Option<
    unsafe extern "C" fn(target: GLenum, level: GLint, pname: GLenum, params: *mut GLfloat),
>;
extern "C" {
    pub static mut glad_glGetTexLevelParameterfv: PFNGLGETTEXLEVELPARAMETERFVPROC;
}
pub type PFNGLGETTEXLEVELPARAMETERIVPROC = ::std::option::Option<
    unsafe extern "C" fn(target: GLenum, level: GLint, pname: GLenum, params: *mut GLint),
>;
extern "C" {
    pub static mut glad_glGetTexLevelParameteriv: PFNGLGETTEXLEVELPARAMETERIVPROC;
}
pub type PFNGLISENABLEDPROC = ::std::option::Option<unsafe extern "C" fn(cap: GLenum) -> GLboolean>;
extern "C" {
    pub static mut glad_glIsEnabled: PFNGLISENABLEDPROC;
}
pub type PFNGLDEPTHRANGEPROC =
    ::std::option::Option<unsafe extern "C" fn(near: GLdouble, far: GLdouble)>;
extern "C" {
    pub static mut glad_glDepthRange: PFNGLDEPTHRANGEPROC;
}
pub type PFNGLVIEWPORTPROC = ::std::option::Option<
    unsafe extern "C" fn(x: GLint, y: GLint, width: GLsizei, height: GLsizei),
>;
extern "C" {
    pub static mut glad_glViewport: PFNGLVIEWPORTPROC;
}
extern "C" {
    pub static mut GLAD_GL_VERSION_1_1: ::std::os::raw::c_int;
}
pub type PFNGLDRAWARRAYSPROC =
    ::std::option::Option<unsafe extern "C" fn(mode: GLenum, first: GLint, count: GLsizei)>;
extern "C" {
    pub static mut glad_glDrawArrays: PFNGLDRAWARRAYSPROC;
}
pub type PFNGLDRAWELEMENTSPROC = ::std::option::Option<
    unsafe extern "C" fn(
        mode: GLenum,
        count: GLsizei,
        type_: GLenum,
        indices: *const ::std::os::raw::c_void,
    ),
>;
extern "C" {
    pub static mut glad_glDrawElements: PFNGLDRAWELEMENTSPROC;
}
pub type PFNGLPOLYGONOFFSETPROC =
    ::std::option::Option<unsafe extern "C" fn(factor: GLfloat, units: GLfloat)>;
extern "C" {
    pub static mut glad_glPolygonOffset: PFNGLPOLYGONOFFSETPROC;
}
pub type PFNGLCOPYTEXIMAGE1DPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        level: GLint,
        internalformat: GLenum,
        x: GLint,
        y: GLint,
        width: GLsizei,
        border: GLint,
    ),
>;
extern "C" {
    pub static mut glad_glCopyTexImage1D: PFNGLCOPYTEXIMAGE1DPROC;
}
pub type PFNGLCOPYTEXIMAGE2DPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        level: GLint,
        internalformat: GLenum,
        x: GLint,
        y: GLint,
        width: GLsizei,
        height: GLsizei,
        border: GLint,
    ),
>;
extern "C" {
    pub static mut glad_glCopyTexImage2D: PFNGLCOPYTEXIMAGE2DPROC;
}
pub type PFNGLCOPYTEXSUBIMAGE1DPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        level: GLint,
        xoffset: GLint,
        x: GLint,
        y: GLint,
        width: GLsizei,
    ),
>;
extern "C" {
    pub static mut glad_glCopyTexSubImage1D: PFNGLCOPYTEXSUBIMAGE1DPROC;
}
pub type PFNGLCOPYTEXSUBIMAGE2DPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        level: GLint,
        xoffset: GLint,
        yoffset: GLint,
        x: GLint,
        y: GLint,
        width: GLsizei,
        height: GLsizei,
    ),
>;
extern "C" {
    pub static mut glad_glCopyTexSubImage2D: PFNGLCOPYTEXSUBIMAGE2DPROC;
}
pub type PFNGLTEXSUBIMAGE1DPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        level: GLint,
        xoffset: GLint,
        width: GLsizei,
        format: GLenum,
        type_: GLenum,
        pixels: *const ::std::os::raw::c_void,
    ),
>;
extern "C" {
    pub static mut glad_glTexSubImage1D: PFNGLTEXSUBIMAGE1DPROC;
}
pub type PFNGLTEXSUBIMAGE2DPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        level: GLint,
        xoffset: GLint,
        yoffset: GLint,
        width: GLsizei,
        height: GLsizei,
        format: GLenum,
        type_: GLenum,
        pixels: *const ::std::os::raw::c_void,
    ),
>;
extern "C" {
    pub static mut glad_glTexSubImage2D: PFNGLTEXSUBIMAGE2DPROC;
}
pub type PFNGLBINDTEXTUREPROC =
    ::std::option::Option<unsafe extern "C" fn(target: GLenum, texture: GLuint)>;
extern "C" {
    pub static mut glad_glBindTexture: PFNGLBINDTEXTUREPROC;
}
pub type PFNGLDELETETEXTURESPROC =
    ::std::option::Option<unsafe extern "C" fn(n: GLsizei, textures: *const GLuint)>;
extern "C" {
    pub static mut glad_glDeleteTextures: PFNGLDELETETEXTURESPROC;
}
pub type PFNGLGENTEXTURESPROC =
    ::std::option::Option<unsafe extern "C" fn(n: GLsizei, textures: *mut GLuint)>;
extern "C" {
    pub static mut glad_glGenTextures: PFNGLGENTEXTURESPROC;
}
pub type PFNGLISTEXTUREPROC =
    ::std::option::Option<unsafe extern "C" fn(texture: GLuint) -> GLboolean>;
extern "C" {
    pub static mut glad_glIsTexture: PFNGLISTEXTUREPROC;
}
extern "C" {
    pub static mut GLAD_GL_VERSION_1_2: ::std::os::raw::c_int;
}
pub type PFNGLDRAWRANGEELEMENTSPROC = ::std::option::Option<
    unsafe extern "C" fn(
        mode: GLenum,
        start: GLuint,
        end: GLuint,
        count: GLsizei,
        type_: GLenum,
        indices: *const ::std::os::raw::c_void,
    ),
>;
extern "C" {
    pub static mut glad_glDrawRangeElements: PFNGLDRAWRANGEELEMENTSPROC;
}
pub type PFNGLTEXIMAGE3DPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        level: GLint,
        internalformat: GLint,
        width: GLsizei,
        height: GLsizei,
        depth: GLsizei,
        border: GLint,
        format: GLenum,
        type_: GLenum,
        pixels: *const ::std::os::raw::c_void,
    ),
>;
extern "C" {
    pub static mut glad_glTexImage3D: PFNGLTEXIMAGE3DPROC;
}
pub type PFNGLTEXSUBIMAGE3DPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        level: GLint,
        xoffset: GLint,
        yoffset: GLint,
        zoffset: GLint,
        width: GLsizei,
        height: GLsizei,
        depth: GLsizei,
        format: GLenum,
        type_: GLenum,
        pixels: *const ::std::os::raw::c_void,
    ),
>;
extern "C" {
    pub static mut glad_glTexSubImage3D: PFNGLTEXSUBIMAGE3DPROC;
}
pub type PFNGLCOPYTEXSUBIMAGE3DPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        level: GLint,
        xoffset: GLint,
        yoffset: GLint,
        zoffset: GLint,
        x: GLint,
        y: GLint,
        width: GLsizei,
        height: GLsizei,
    ),
>;
extern "C" {
    pub static mut glad_glCopyTexSubImage3D: PFNGLCOPYTEXSUBIMAGE3DPROC;
}
extern "C" {
    pub static mut GLAD_GL_VERSION_1_3: ::std::os::raw::c_int;
}
pub type PFNGLACTIVETEXTUREPROC = ::std::option::Option<unsafe extern "C" fn(texture: GLenum)>;
extern "C" {
    pub static mut glad_glActiveTexture: PFNGLACTIVETEXTUREPROC;
}
pub type PFNGLSAMPLECOVERAGEPROC =
    ::std::option::Option<unsafe extern "C" fn(value: GLfloat, invert: GLboolean)>;
extern "C" {
    pub static mut glad_glSampleCoverage: PFNGLSAMPLECOVERAGEPROC;
}
pub type PFNGLCOMPRESSEDTEXIMAGE3DPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        level: GLint,
        internalformat: GLenum,
        width: GLsizei,
        height: GLsizei,
        depth: GLsizei,
        border: GLint,
        imageSize: GLsizei,
        data: *const ::std::os::raw::c_void,
    ),
>;
extern "C" {
    pub static mut glad_glCompressedTexImage3D: PFNGLCOMPRESSEDTEXIMAGE3DPROC;
}
pub type PFNGLCOMPRESSEDTEXIMAGE2DPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        level: GLint,
        internalformat: GLenum,
        width: GLsizei,
        height: GLsizei,
        border: GLint,
        imageSize: GLsizei,
        data: *const ::std::os::raw::c_void,
    ),
>;
extern "C" {
    pub static mut glad_glCompressedTexImage2D: PFNGLCOMPRESSEDTEXIMAGE2DPROC;
}
pub type PFNGLCOMPRESSEDTEXIMAGE1DPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        level: GLint,
        internalformat: GLenum,
        width: GLsizei,
        border: GLint,
        imageSize: GLsizei,
        data: *const ::std::os::raw::c_void,
    ),
>;
extern "C" {
    pub static mut glad_glCompressedTexImage1D: PFNGLCOMPRESSEDTEXIMAGE1DPROC;
}
pub type PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        level: GLint,
        xoffset: GLint,
        yoffset: GLint,
        zoffset: GLint,
        width: GLsizei,
        height: GLsizei,
        depth: GLsizei,
        format: GLenum,
        imageSize: GLsizei,
        data: *const ::std::os::raw::c_void,
    ),
>;
extern "C" {
    pub static mut glad_glCompressedTexSubImage3D: PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC;
}
pub type PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        level: GLint,
        xoffset: GLint,
        yoffset: GLint,
        width: GLsizei,
        height: GLsizei,
        format: GLenum,
        imageSize: GLsizei,
        data: *const ::std::os::raw::c_void,
    ),
>;
extern "C" {
    pub static mut glad_glCompressedTexSubImage2D: PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC;
}
pub type PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        level: GLint,
        xoffset: GLint,
        width: GLsizei,
        format: GLenum,
        imageSize: GLsizei,
        data: *const ::std::os::raw::c_void,
    ),
>;
extern "C" {
    pub static mut glad_glCompressedTexSubImage1D: PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC;
}
pub type PFNGLGETCOMPRESSEDTEXIMAGEPROC = ::std::option::Option<
    unsafe extern "C" fn(target: GLenum, level: GLint, img: *mut ::std::os::raw::c_void),
>;
extern "C" {
    pub static mut glad_glGetCompressedTexImage: PFNGLGETCOMPRESSEDTEXIMAGEPROC;
}
extern "C" {
    pub static mut GLAD_GL_VERSION_1_4: ::std::os::raw::c_int;
}
pub type PFNGLBLENDFUNCSEPARATEPROC = ::std::option::Option<
    unsafe extern "C" fn(
        sfactorRGB: GLenum,
        dfactorRGB: GLenum,
        sfactorAlpha: GLenum,
        dfactorAlpha: GLenum,
    ),
>;
extern "C" {
    pub static mut glad_glBlendFuncSeparate: PFNGLBLENDFUNCSEPARATEPROC;
}
pub type PFNGLMULTIDRAWARRAYSPROC = ::std::option::Option<
    unsafe extern "C" fn(
        mode: GLenum,
        first: *const GLint,
        count: *const GLsizei,
        drawcount: GLsizei,
    ),
>;
extern "C" {
    pub static mut glad_glMultiDrawArrays: PFNGLMULTIDRAWARRAYSPROC;
}
pub type PFNGLMULTIDRAWELEMENTSPROC = ::std::option::Option<
    unsafe extern "C" fn(
        mode: GLenum,
        count: *const GLsizei,
        type_: GLenum,
        indices: *mut *const ::std::os::raw::c_void,
        drawcount: GLsizei,
    ),
>;
extern "C" {
    pub static mut glad_glMultiDrawElements: PFNGLMULTIDRAWELEMENTSPROC;
}
pub type PFNGLPOINTPARAMETERFPROC =
    ::std::option::Option<unsafe extern "C" fn(pname: GLenum, param: GLfloat)>;
extern "C" {
    pub static mut glad_glPointParameterf: PFNGLPOINTPARAMETERFPROC;
}
pub type PFNGLPOINTPARAMETERFVPROC =
    ::std::option::Option<unsafe extern "C" fn(pname: GLenum, params: *const GLfloat)>;
extern "C" {
    pub static mut glad_glPointParameterfv: PFNGLPOINTPARAMETERFVPROC;
}
pub type PFNGLPOINTPARAMETERIPROC =
    ::std::option::Option<unsafe extern "C" fn(pname: GLenum, param: GLint)>;
extern "C" {
    pub static mut glad_glPointParameteri: PFNGLPOINTPARAMETERIPROC;
}
pub type PFNGLPOINTPARAMETERIVPROC =
    ::std::option::Option<unsafe extern "C" fn(pname: GLenum, params: *const GLint)>;
extern "C" {
    pub static mut glad_glPointParameteriv: PFNGLPOINTPARAMETERIVPROC;
}
pub type PFNGLBLENDCOLORPROC = ::std::option::Option<
    unsafe extern "C" fn(red: GLfloat, green: GLfloat, blue: GLfloat, alpha: GLfloat),
>;
extern "C" {
    pub static mut glad_glBlendColor: PFNGLBLENDCOLORPROC;
}
pub type PFNGLBLENDEQUATIONPROC = ::std::option::Option<unsafe extern "C" fn(mode: GLenum)>;
extern "C" {
    pub static mut glad_glBlendEquation: PFNGLBLENDEQUATIONPROC;
}
extern "C" {
    pub static mut GLAD_GL_VERSION_1_5: ::std::os::raw::c_int;
}
pub type PFNGLGENQUERIESPROC =
    ::std::option::Option<unsafe extern "C" fn(n: GLsizei, ids: *mut GLuint)>;
extern "C" {
    pub static mut glad_glGenQueries: PFNGLGENQUERIESPROC;
}
pub type PFNGLDELETEQUERIESPROC =
    ::std::option::Option<unsafe extern "C" fn(n: GLsizei, ids: *const GLuint)>;
extern "C" {
    pub static mut glad_glDeleteQueries: PFNGLDELETEQUERIESPROC;
}
pub type PFNGLISQUERYPROC = ::std::option::Option<unsafe extern "C" fn(id: GLuint) -> GLboolean>;
extern "C" {
    pub static mut glad_glIsQuery: PFNGLISQUERYPROC;
}
pub type PFNGLBEGINQUERYPROC =
    ::std::option::Option<unsafe extern "C" fn(target: GLenum, id: GLuint)>;
extern "C" {
    pub static mut glad_glBeginQuery: PFNGLBEGINQUERYPROC;
}
pub type PFNGLENDQUERYPROC = ::std::option::Option<unsafe extern "C" fn(target: GLenum)>;
extern "C" {
    pub static mut glad_glEndQuery: PFNGLENDQUERYPROC;
}
pub type PFNGLGETQUERYIVPROC =
    ::std::option::Option<unsafe extern "C" fn(target: GLenum, pname: GLenum, params: *mut GLint)>;
extern "C" {
    pub static mut glad_glGetQueryiv: PFNGLGETQUERYIVPROC;
}
pub type PFNGLGETQUERYOBJECTIVPROC =
    ::std::option::Option<unsafe extern "C" fn(id: GLuint, pname: GLenum, params: *mut GLint)>;
extern "C" {
    pub static mut glad_glGetQueryObjectiv: PFNGLGETQUERYOBJECTIVPROC;
}
pub type PFNGLGETQUERYOBJECTUIVPROC =
    ::std::option::Option<unsafe extern "C" fn(id: GLuint, pname: GLenum, params: *mut GLuint)>;
extern "C" {
    pub static mut glad_glGetQueryObjectuiv: PFNGLGETQUERYOBJECTUIVPROC;
}
pub type PFNGLBINDBUFFERPROC =
    ::std::option::Option<unsafe extern "C" fn(target: GLenum, buffer: GLuint)>;
extern "C" {
    pub static mut glad_glBindBuffer: PFNGLBINDBUFFERPROC;
}
pub type PFNGLDELETEBUFFERSPROC =
    ::std::option::Option<unsafe extern "C" fn(n: GLsizei, buffers: *const GLuint)>;
extern "C" {
    pub static mut glad_glDeleteBuffers: PFNGLDELETEBUFFERSPROC;
}
pub type PFNGLGENBUFFERSPROC =
    ::std::option::Option<unsafe extern "C" fn(n: GLsizei, buffers: *mut GLuint)>;
extern "C" {
    pub static mut glad_glGenBuffers: PFNGLGENBUFFERSPROC;
}
pub type PFNGLISBUFFERPROC =
    ::std::option::Option<unsafe extern "C" fn(buffer: GLuint) -> GLboolean>;
extern "C" {
    pub static mut glad_glIsBuffer: PFNGLISBUFFERPROC;
}
pub type PFNGLBUFFERDATAPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        size: GLsizeiptr,
        data: *const ::std::os::raw::c_void,
        usage: GLenum,
    ),
>;
extern "C" {
    pub static mut glad_glBufferData: PFNGLBUFFERDATAPROC;
}
pub type PFNGLBUFFERSUBDATAPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        offset: GLintptr,
        size: GLsizeiptr,
        data: *const ::std::os::raw::c_void,
    ),
>;
extern "C" {
    pub static mut glad_glBufferSubData: PFNGLBUFFERSUBDATAPROC;
}
pub type PFNGLGETBUFFERSUBDATAPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        offset: GLintptr,
        size: GLsizeiptr,
        data: *mut ::std::os::raw::c_void,
    ),
>;
extern "C" {
    pub static mut glad_glGetBufferSubData: PFNGLGETBUFFERSUBDATAPROC;
}
pub type PFNGLMAPBUFFERPROC = ::std::option::Option<
    unsafe extern "C" fn(target: GLenum, access: GLenum) -> *mut ::std::os::raw::c_void,
>;
extern "C" {
    pub static mut glad_glMapBuffer: PFNGLMAPBUFFERPROC;
}
pub type PFNGLUNMAPBUFFERPROC =
    ::std::option::Option<unsafe extern "C" fn(target: GLenum) -> GLboolean>;
extern "C" {
    pub static mut glad_glUnmapBuffer: PFNGLUNMAPBUFFERPROC;
}
pub type PFNGLGETBUFFERPARAMETERIVPROC =
    ::std::option::Option<unsafe extern "C" fn(target: GLenum, pname: GLenum, params: *mut GLint)>;
extern "C" {
    pub static mut glad_glGetBufferParameteriv: PFNGLGETBUFFERPARAMETERIVPROC;
}
pub type PFNGLGETBUFFERPOINTERVPROC = ::std::option::Option<
    unsafe extern "C" fn(target: GLenum, pname: GLenum, params: *mut *mut ::std::os::raw::c_void),
>;
extern "C" {
    pub static mut glad_glGetBufferPointerv: PFNGLGETBUFFERPOINTERVPROC;
}
extern "C" {
    pub static mut GLAD_GL_VERSION_2_0: ::std::os::raw::c_int;
}
pub type PFNGLBLENDEQUATIONSEPARATEPROC =
    ::std::option::Option<unsafe extern "C" fn(modeRGB: GLenum, modeAlpha: GLenum)>;
extern "C" {
    pub static mut glad_glBlendEquationSeparate: PFNGLBLENDEQUATIONSEPARATEPROC;
}
pub type PFNGLDRAWBUFFERSPROC =
    ::std::option::Option<unsafe extern "C" fn(n: GLsizei, bufs: *const GLenum)>;
extern "C" {
    pub static mut glad_glDrawBuffers: PFNGLDRAWBUFFERSPROC;
}
pub type PFNGLSTENCILOPSEPARATEPROC = ::std::option::Option<
    unsafe extern "C" fn(face: GLenum, sfail: GLenum, dpfail: GLenum, dppass: GLenum),
>;
extern "C" {
    pub static mut glad_glStencilOpSeparate: PFNGLSTENCILOPSEPARATEPROC;
}
pub type PFNGLSTENCILFUNCSEPARATEPROC = ::std::option::Option<
    unsafe extern "C" fn(face: GLenum, func: GLenum, ref_: GLint, mask: GLuint),
>;
extern "C" {
    pub static mut glad_glStencilFuncSeparate: PFNGLSTENCILFUNCSEPARATEPROC;
}
pub type PFNGLSTENCILMASKSEPARATEPROC =
    ::std::option::Option<unsafe extern "C" fn(face: GLenum, mask: GLuint)>;
extern "C" {
    pub static mut glad_glStencilMaskSeparate: PFNGLSTENCILMASKSEPARATEPROC;
}
pub type PFNGLATTACHSHADERPROC =
    ::std::option::Option<unsafe extern "C" fn(program: GLuint, shader: GLuint)>;
extern "C" {
    pub static mut glad_glAttachShader: PFNGLATTACHSHADERPROC;
}
pub type PFNGLBINDATTRIBLOCATIONPROC = ::std::option::Option<
    unsafe extern "C" fn(program: GLuint, index: GLuint, name: *const GLchar),
>;
extern "C" {
    pub static mut glad_glBindAttribLocation: PFNGLBINDATTRIBLOCATIONPROC;
}
pub type PFNGLCOMPILESHADERPROC = ::std::option::Option<unsafe extern "C" fn(shader: GLuint)>;
extern "C" {
    pub static mut glad_glCompileShader: PFNGLCOMPILESHADERPROC;
}
pub type PFNGLCREATEPROGRAMPROC = ::std::option::Option<unsafe extern "C" fn() -> GLuint>;
extern "C" {
    pub static mut glad_glCreateProgram: PFNGLCREATEPROGRAMPROC;
}
pub type PFNGLCREATESHADERPROC =
    ::std::option::Option<unsafe extern "C" fn(type_: GLenum) -> GLuint>;
extern "C" {
    pub static mut glad_glCreateShader: PFNGLCREATESHADERPROC;
}
pub type PFNGLDELETEPROGRAMPROC = ::std::option::Option<unsafe extern "C" fn(program: GLuint)>;
extern "C" {
    pub static mut glad_glDeleteProgram: PFNGLDELETEPROGRAMPROC;
}
pub type PFNGLDELETESHADERPROC = ::std::option::Option<unsafe extern "C" fn(shader: GLuint)>;
extern "C" {
    pub static mut glad_glDeleteShader: PFNGLDELETESHADERPROC;
}
pub type PFNGLDETACHSHADERPROC =
    ::std::option::Option<unsafe extern "C" fn(program: GLuint, shader: GLuint)>;
extern "C" {
    pub static mut glad_glDetachShader: PFNGLDETACHSHADERPROC;
}
pub type PFNGLDISABLEVERTEXATTRIBARRAYPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint)>;
extern "C" {
    pub static mut glad_glDisableVertexAttribArray: PFNGLDISABLEVERTEXATTRIBARRAYPROC;
}
pub type PFNGLENABLEVERTEXATTRIBARRAYPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint)>;
extern "C" {
    pub static mut glad_glEnableVertexAttribArray: PFNGLENABLEVERTEXATTRIBARRAYPROC;
}
pub type PFNGLGETACTIVEATTRIBPROC = ::std::option::Option<
    unsafe extern "C" fn(
        program: GLuint,
        index: GLuint,
        bufSize: GLsizei,
        length: *mut GLsizei,
        size: *mut GLint,
        type_: *mut GLenum,
        name: *mut GLchar,
    ),
>;
extern "C" {
    pub static mut glad_glGetActiveAttrib: PFNGLGETACTIVEATTRIBPROC;
}
pub type PFNGLGETACTIVEUNIFORMPROC = ::std::option::Option<
    unsafe extern "C" fn(
        program: GLuint,
        index: GLuint,
        bufSize: GLsizei,
        length: *mut GLsizei,
        size: *mut GLint,
        type_: *mut GLenum,
        name: *mut GLchar,
    ),
>;
extern "C" {
    pub static mut glad_glGetActiveUniform: PFNGLGETACTIVEUNIFORMPROC;
}
pub type PFNGLGETATTACHEDSHADERSPROC = ::std::option::Option<
    unsafe extern "C" fn(
        program: GLuint,
        maxCount: GLsizei,
        count: *mut GLsizei,
        shaders: *mut GLuint,
    ),
>;
extern "C" {
    pub static mut glad_glGetAttachedShaders: PFNGLGETATTACHEDSHADERSPROC;
}
pub type PFNGLGETATTRIBLOCATIONPROC =
    ::std::option::Option<unsafe extern "C" fn(program: GLuint, name: *const GLchar) -> GLint>;
extern "C" {
    pub static mut glad_glGetAttribLocation: PFNGLGETATTRIBLOCATIONPROC;
}
pub type PFNGLGETPROGRAMIVPROC =
    ::std::option::Option<unsafe extern "C" fn(program: GLuint, pname: GLenum, params: *mut GLint)>;
extern "C" {
    pub static mut glad_glGetProgramiv: PFNGLGETPROGRAMIVPROC;
}
pub type PFNGLGETPROGRAMINFOLOGPROC = ::std::option::Option<
    unsafe extern "C" fn(
        program: GLuint,
        bufSize: GLsizei,
        length: *mut GLsizei,
        infoLog: *mut GLchar,
    ),
>;
extern "C" {
    pub static mut glad_glGetProgramInfoLog: PFNGLGETPROGRAMINFOLOGPROC;
}
pub type PFNGLGETSHADERIVPROC =
    ::std::option::Option<unsafe extern "C" fn(shader: GLuint, pname: GLenum, params: *mut GLint)>;
extern "C" {
    pub static mut glad_glGetShaderiv: PFNGLGETSHADERIVPROC;
}
pub type PFNGLGETSHADERINFOLOGPROC = ::std::option::Option<
    unsafe extern "C" fn(
        shader: GLuint,
        bufSize: GLsizei,
        length: *mut GLsizei,
        infoLog: *mut GLchar,
    ),
>;
extern "C" {
    pub static mut glad_glGetShaderInfoLog: PFNGLGETSHADERINFOLOGPROC;
}
pub type PFNGLGETSHADERSOURCEPROC = ::std::option::Option<
    unsafe extern "C" fn(
        shader: GLuint,
        bufSize: GLsizei,
        length: *mut GLsizei,
        source: *mut GLchar,
    ),
>;
extern "C" {
    pub static mut glad_glGetShaderSource: PFNGLGETSHADERSOURCEPROC;
}
pub type PFNGLGETUNIFORMLOCATIONPROC =
    ::std::option::Option<unsafe extern "C" fn(program: GLuint, name: *const GLchar) -> GLint>;
extern "C" {
    pub static mut glad_glGetUniformLocation: PFNGLGETUNIFORMLOCATIONPROC;
}
pub type PFNGLGETUNIFORMFVPROC = ::std::option::Option<
    unsafe extern "C" fn(program: GLuint, location: GLint, params: *mut GLfloat),
>;
extern "C" {
    pub static mut glad_glGetUniformfv: PFNGLGETUNIFORMFVPROC;
}
pub type PFNGLGETUNIFORMIVPROC = ::std::option::Option<
    unsafe extern "C" fn(program: GLuint, location: GLint, params: *mut GLint),
>;
extern "C" {
    pub static mut glad_glGetUniformiv: PFNGLGETUNIFORMIVPROC;
}
pub type PFNGLGETVERTEXATTRIBDVPROC = ::std::option::Option<
    unsafe extern "C" fn(index: GLuint, pname: GLenum, params: *mut GLdouble),
>;
extern "C" {
    pub static mut glad_glGetVertexAttribdv: PFNGLGETVERTEXATTRIBDVPROC;
}
pub type PFNGLGETVERTEXATTRIBFVPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, pname: GLenum, params: *mut GLfloat)>;
extern "C" {
    pub static mut glad_glGetVertexAttribfv: PFNGLGETVERTEXATTRIBFVPROC;
}
pub type PFNGLGETVERTEXATTRIBIVPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, pname: GLenum, params: *mut GLint)>;
extern "C" {
    pub static mut glad_glGetVertexAttribiv: PFNGLGETVERTEXATTRIBIVPROC;
}
pub type PFNGLGETVERTEXATTRIBPOINTERVPROC = ::std::option::Option<
    unsafe extern "C" fn(index: GLuint, pname: GLenum, pointer: *mut *mut ::std::os::raw::c_void),
>;
extern "C" {
    pub static mut glad_glGetVertexAttribPointerv: PFNGLGETVERTEXATTRIBPOINTERVPROC;
}
pub type PFNGLISPROGRAMPROC =
    ::std::option::Option<unsafe extern "C" fn(program: GLuint) -> GLboolean>;
extern "C" {
    pub static mut glad_glIsProgram: PFNGLISPROGRAMPROC;
}
pub type PFNGLISSHADERPROC =
    ::std::option::Option<unsafe extern "C" fn(shader: GLuint) -> GLboolean>;
extern "C" {
    pub static mut glad_glIsShader: PFNGLISSHADERPROC;
}
pub type PFNGLLINKPROGRAMPROC = ::std::option::Option<unsafe extern "C" fn(program: GLuint)>;
extern "C" {
    pub static mut glad_glLinkProgram: PFNGLLINKPROGRAMPROC;
}
pub type PFNGLSHADERSOURCEPROC = ::std::option::Option<
    unsafe extern "C" fn(
        shader: GLuint,
        count: GLsizei,
        string: *mut *const GLchar,
        length: *const GLint,
    ),
>;
extern "C" {
    pub static mut glad_glShaderSource: PFNGLSHADERSOURCEPROC;
}
pub type PFNGLUSEPROGRAMPROC = ::std::option::Option<unsafe extern "C" fn(program: GLuint)>;
extern "C" {
    pub static mut glad_glUseProgram: PFNGLUSEPROGRAMPROC;
}
pub type PFNGLUNIFORM1FPROC =
    ::std::option::Option<unsafe extern "C" fn(location: GLint, v0: GLfloat)>;
extern "C" {
    pub static mut glad_glUniform1f: PFNGLUNIFORM1FPROC;
}
pub type PFNGLUNIFORM2FPROC =
    ::std::option::Option<unsafe extern "C" fn(location: GLint, v0: GLfloat, v1: GLfloat)>;
extern "C" {
    pub static mut glad_glUniform2f: PFNGLUNIFORM2FPROC;
}
pub type PFNGLUNIFORM3FPROC = ::std::option::Option<
    unsafe extern "C" fn(location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat),
>;
extern "C" {
    pub static mut glad_glUniform3f: PFNGLUNIFORM3FPROC;
}
pub type PFNGLUNIFORM4FPROC = ::std::option::Option<
    unsafe extern "C" fn(location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat, v3: GLfloat),
>;
extern "C" {
    pub static mut glad_glUniform4f: PFNGLUNIFORM4FPROC;
}
pub type PFNGLUNIFORM1IPROC =
    ::std::option::Option<unsafe extern "C" fn(location: GLint, v0: GLint)>;
extern "C" {
    pub static mut glad_glUniform1i: PFNGLUNIFORM1IPROC;
}
pub type PFNGLUNIFORM2IPROC =
    ::std::option::Option<unsafe extern "C" fn(location: GLint, v0: GLint, v1: GLint)>;
extern "C" {
    pub static mut glad_glUniform2i: PFNGLUNIFORM2IPROC;
}
pub type PFNGLUNIFORM3IPROC =
    ::std::option::Option<unsafe extern "C" fn(location: GLint, v0: GLint, v1: GLint, v2: GLint)>;
extern "C" {
    pub static mut glad_glUniform3i: PFNGLUNIFORM3IPROC;
}
pub type PFNGLUNIFORM4IPROC = ::std::option::Option<
    unsafe extern "C" fn(location: GLint, v0: GLint, v1: GLint, v2: GLint, v3: GLint),
>;
extern "C" {
    pub static mut glad_glUniform4i: PFNGLUNIFORM4IPROC;
}
pub type PFNGLUNIFORM1FVPROC = ::std::option::Option<
    unsafe extern "C" fn(location: GLint, count: GLsizei, value: *const GLfloat),
>;
extern "C" {
    pub static mut glad_glUniform1fv: PFNGLUNIFORM1FVPROC;
}
pub type PFNGLUNIFORM2FVPROC = ::std::option::Option<
    unsafe extern "C" fn(location: GLint, count: GLsizei, value: *const GLfloat),
>;
extern "C" {
    pub static mut glad_glUniform2fv: PFNGLUNIFORM2FVPROC;
}
pub type PFNGLUNIFORM3FVPROC = ::std::option::Option<
    unsafe extern "C" fn(location: GLint, count: GLsizei, value: *const GLfloat),
>;
extern "C" {
    pub static mut glad_glUniform3fv: PFNGLUNIFORM3FVPROC;
}
pub type PFNGLUNIFORM4FVPROC = ::std::option::Option<
    unsafe extern "C" fn(location: GLint, count: GLsizei, value: *const GLfloat),
>;
extern "C" {
    pub static mut glad_glUniform4fv: PFNGLUNIFORM4FVPROC;
}
pub type PFNGLUNIFORM1IVPROC = ::std::option::Option<
    unsafe extern "C" fn(location: GLint, count: GLsizei, value: *const GLint),
>;
extern "C" {
    pub static mut glad_glUniform1iv: PFNGLUNIFORM1IVPROC;
}
pub type PFNGLUNIFORM2IVPROC = ::std::option::Option<
    unsafe extern "C" fn(location: GLint, count: GLsizei, value: *const GLint),
>;
extern "C" {
    pub static mut glad_glUniform2iv: PFNGLUNIFORM2IVPROC;
}
pub type PFNGLUNIFORM3IVPROC = ::std::option::Option<
    unsafe extern "C" fn(location: GLint, count: GLsizei, value: *const GLint),
>;
extern "C" {
    pub static mut glad_glUniform3iv: PFNGLUNIFORM3IVPROC;
}
pub type PFNGLUNIFORM4IVPROC = ::std::option::Option<
    unsafe extern "C" fn(location: GLint, count: GLsizei, value: *const GLint),
>;
extern "C" {
    pub static mut glad_glUniform4iv: PFNGLUNIFORM4IVPROC;
}
pub type PFNGLUNIFORMMATRIX2FVPROC = ::std::option::Option<
    unsafe extern "C" fn(
        location: GLint,
        count: GLsizei,
        transpose: GLboolean,
        value: *const GLfloat,
    ),
>;
extern "C" {
    pub static mut glad_glUniformMatrix2fv: PFNGLUNIFORMMATRIX2FVPROC;
}
pub type PFNGLUNIFORMMATRIX3FVPROC = ::std::option::Option<
    unsafe extern "C" fn(
        location: GLint,
        count: GLsizei,
        transpose: GLboolean,
        value: *const GLfloat,
    ),
>;
extern "C" {
    pub static mut glad_glUniformMatrix3fv: PFNGLUNIFORMMATRIX3FVPROC;
}
pub type PFNGLUNIFORMMATRIX4FVPROC = ::std::option::Option<
    unsafe extern "C" fn(
        location: GLint,
        count: GLsizei,
        transpose: GLboolean,
        value: *const GLfloat,
    ),
>;
extern "C" {
    pub static mut glad_glUniformMatrix4fv: PFNGLUNIFORMMATRIX4FVPROC;
}
pub type PFNGLVALIDATEPROGRAMPROC = ::std::option::Option<unsafe extern "C" fn(program: GLuint)>;
extern "C" {
    pub static mut glad_glValidateProgram: PFNGLVALIDATEPROGRAMPROC;
}
pub type PFNGLVERTEXATTRIB1DPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, x: GLdouble)>;
extern "C" {
    pub static mut glad_glVertexAttrib1d: PFNGLVERTEXATTRIB1DPROC;
}
pub type PFNGLVERTEXATTRIB1DVPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLdouble)>;
extern "C" {
    pub static mut glad_glVertexAttrib1dv: PFNGLVERTEXATTRIB1DVPROC;
}
pub type PFNGLVERTEXATTRIB1FPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, x: GLfloat)>;
extern "C" {
    pub static mut glad_glVertexAttrib1f: PFNGLVERTEXATTRIB1FPROC;
}
pub type PFNGLVERTEXATTRIB1FVPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLfloat)>;
extern "C" {
    pub static mut glad_glVertexAttrib1fv: PFNGLVERTEXATTRIB1FVPROC;
}
pub type PFNGLVERTEXATTRIB1SPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, x: GLshort)>;
extern "C" {
    pub static mut glad_glVertexAttrib1s: PFNGLVERTEXATTRIB1SPROC;
}
pub type PFNGLVERTEXATTRIB1SVPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLshort)>;
extern "C" {
    pub static mut glad_glVertexAttrib1sv: PFNGLVERTEXATTRIB1SVPROC;
}
pub type PFNGLVERTEXATTRIB2DPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, x: GLdouble, y: GLdouble)>;
extern "C" {
    pub static mut glad_glVertexAttrib2d: PFNGLVERTEXATTRIB2DPROC;
}
pub type PFNGLVERTEXATTRIB2DVPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLdouble)>;
extern "C" {
    pub static mut glad_glVertexAttrib2dv: PFNGLVERTEXATTRIB2DVPROC;
}
pub type PFNGLVERTEXATTRIB2FPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, x: GLfloat, y: GLfloat)>;
extern "C" {
    pub static mut glad_glVertexAttrib2f: PFNGLVERTEXATTRIB2FPROC;
}
pub type PFNGLVERTEXATTRIB2FVPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLfloat)>;
extern "C" {
    pub static mut glad_glVertexAttrib2fv: PFNGLVERTEXATTRIB2FVPROC;
}
pub type PFNGLVERTEXATTRIB2SPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, x: GLshort, y: GLshort)>;
extern "C" {
    pub static mut glad_glVertexAttrib2s: PFNGLVERTEXATTRIB2SPROC;
}
pub type PFNGLVERTEXATTRIB2SVPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLshort)>;
extern "C" {
    pub static mut glad_glVertexAttrib2sv: PFNGLVERTEXATTRIB2SVPROC;
}
pub type PFNGLVERTEXATTRIB3DPROC = ::std::option::Option<
    unsafe extern "C" fn(index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble),
>;
extern "C" {
    pub static mut glad_glVertexAttrib3d: PFNGLVERTEXATTRIB3DPROC;
}
pub type PFNGLVERTEXATTRIB3DVPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLdouble)>;
extern "C" {
    pub static mut glad_glVertexAttrib3dv: PFNGLVERTEXATTRIB3DVPROC;
}
pub type PFNGLVERTEXATTRIB3FPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat)>;
extern "C" {
    pub static mut glad_glVertexAttrib3f: PFNGLVERTEXATTRIB3FPROC;
}
pub type PFNGLVERTEXATTRIB3FVPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLfloat)>;
extern "C" {
    pub static mut glad_glVertexAttrib3fv: PFNGLVERTEXATTRIB3FVPROC;
}
pub type PFNGLVERTEXATTRIB3SPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, x: GLshort, y: GLshort, z: GLshort)>;
extern "C" {
    pub static mut glad_glVertexAttrib3s: PFNGLVERTEXATTRIB3SPROC;
}
pub type PFNGLVERTEXATTRIB3SVPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLshort)>;
extern "C" {
    pub static mut glad_glVertexAttrib3sv: PFNGLVERTEXATTRIB3SVPROC;
}
pub type PFNGLVERTEXATTRIB4NBVPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLbyte)>;
extern "C" {
    pub static mut glad_glVertexAttrib4Nbv: PFNGLVERTEXATTRIB4NBVPROC;
}
pub type PFNGLVERTEXATTRIB4NIVPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLint)>;
extern "C" {
    pub static mut glad_glVertexAttrib4Niv: PFNGLVERTEXATTRIB4NIVPROC;
}
pub type PFNGLVERTEXATTRIB4NSVPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLshort)>;
extern "C" {
    pub static mut glad_glVertexAttrib4Nsv: PFNGLVERTEXATTRIB4NSVPROC;
}
pub type PFNGLVERTEXATTRIB4NUBPROC = ::std::option::Option<
    unsafe extern "C" fn(index: GLuint, x: GLubyte, y: GLubyte, z: GLubyte, w: GLubyte),
>;
extern "C" {
    pub static mut glad_glVertexAttrib4Nub: PFNGLVERTEXATTRIB4NUBPROC;
}
pub type PFNGLVERTEXATTRIB4NUBVPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLubyte)>;
extern "C" {
    pub static mut glad_glVertexAttrib4Nubv: PFNGLVERTEXATTRIB4NUBVPROC;
}
pub type PFNGLVERTEXATTRIB4NUIVPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLuint)>;
extern "C" {
    pub static mut glad_glVertexAttrib4Nuiv: PFNGLVERTEXATTRIB4NUIVPROC;
}
pub type PFNGLVERTEXATTRIB4NUSVPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLushort)>;
extern "C" {
    pub static mut glad_glVertexAttrib4Nusv: PFNGLVERTEXATTRIB4NUSVPROC;
}
pub type PFNGLVERTEXATTRIB4BVPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLbyte)>;
extern "C" {
    pub static mut glad_glVertexAttrib4bv: PFNGLVERTEXATTRIB4BVPROC;
}
pub type PFNGLVERTEXATTRIB4DPROC = ::std::option::Option<
    unsafe extern "C" fn(index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble),
>;
extern "C" {
    pub static mut glad_glVertexAttrib4d: PFNGLVERTEXATTRIB4DPROC;
}
pub type PFNGLVERTEXATTRIB4DVPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLdouble)>;
extern "C" {
    pub static mut glad_glVertexAttrib4dv: PFNGLVERTEXATTRIB4DVPROC;
}
pub type PFNGLVERTEXATTRIB4FPROC = ::std::option::Option<
    unsafe extern "C" fn(index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat),
>;
extern "C" {
    pub static mut glad_glVertexAttrib4f: PFNGLVERTEXATTRIB4FPROC;
}
pub type PFNGLVERTEXATTRIB4FVPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLfloat)>;
extern "C" {
    pub static mut glad_glVertexAttrib4fv: PFNGLVERTEXATTRIB4FVPROC;
}
pub type PFNGLVERTEXATTRIB4IVPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLint)>;
extern "C" {
    pub static mut glad_glVertexAttrib4iv: PFNGLVERTEXATTRIB4IVPROC;
}
pub type PFNGLVERTEXATTRIB4SPROC = ::std::option::Option<
    unsafe extern "C" fn(index: GLuint, x: GLshort, y: GLshort, z: GLshort, w: GLshort),
>;
extern "C" {
    pub static mut glad_glVertexAttrib4s: PFNGLVERTEXATTRIB4SPROC;
}
pub type PFNGLVERTEXATTRIB4SVPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLshort)>;
extern "C" {
    pub static mut glad_glVertexAttrib4sv: PFNGLVERTEXATTRIB4SVPROC;
}
pub type PFNGLVERTEXATTRIB4UBVPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLubyte)>;
extern "C" {
    pub static mut glad_glVertexAttrib4ubv: PFNGLVERTEXATTRIB4UBVPROC;
}
pub type PFNGLVERTEXATTRIB4UIVPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLuint)>;
extern "C" {
    pub static mut glad_glVertexAttrib4uiv: PFNGLVERTEXATTRIB4UIVPROC;
}
pub type PFNGLVERTEXATTRIB4USVPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLushort)>;
extern "C" {
    pub static mut glad_glVertexAttrib4usv: PFNGLVERTEXATTRIB4USVPROC;
}
pub type PFNGLVERTEXATTRIBPOINTERPROC = ::std::option::Option<
    unsafe extern "C" fn(
        index: GLuint,
        size: GLint,
        type_: GLenum,
        normalized: GLboolean,
        stride: GLsizei,
        pointer: *const ::std::os::raw::c_void,
    ),
>;
extern "C" {
    pub static mut glad_glVertexAttribPointer: PFNGLVERTEXATTRIBPOINTERPROC;
}
extern "C" {
    pub static mut GLAD_GL_VERSION_2_1: ::std::os::raw::c_int;
}
pub type PFNGLUNIFORMMATRIX2X3FVPROC = ::std::option::Option<
    unsafe extern "C" fn(
        location: GLint,
        count: GLsizei,
        transpose: GLboolean,
        value: *const GLfloat,
    ),
>;
extern "C" {
    pub static mut glad_glUniformMatrix2x3fv: PFNGLUNIFORMMATRIX2X3FVPROC;
}
pub type PFNGLUNIFORMMATRIX3X2FVPROC = ::std::option::Option<
    unsafe extern "C" fn(
        location: GLint,
        count: GLsizei,
        transpose: GLboolean,
        value: *const GLfloat,
    ),
>;
extern "C" {
    pub static mut glad_glUniformMatrix3x2fv: PFNGLUNIFORMMATRIX3X2FVPROC;
}
pub type PFNGLUNIFORMMATRIX2X4FVPROC = ::std::option::Option<
    unsafe extern "C" fn(
        location: GLint,
        count: GLsizei,
        transpose: GLboolean,
        value: *const GLfloat,
    ),
>;
extern "C" {
    pub static mut glad_glUniformMatrix2x4fv: PFNGLUNIFORMMATRIX2X4FVPROC;
}
pub type PFNGLUNIFORMMATRIX4X2FVPROC = ::std::option::Option<
    unsafe extern "C" fn(
        location: GLint,
        count: GLsizei,
        transpose: GLboolean,
        value: *const GLfloat,
    ),
>;
extern "C" {
    pub static mut glad_glUniformMatrix4x2fv: PFNGLUNIFORMMATRIX4X2FVPROC;
}
pub type PFNGLUNIFORMMATRIX3X4FVPROC = ::std::option::Option<
    unsafe extern "C" fn(
        location: GLint,
        count: GLsizei,
        transpose: GLboolean,
        value: *const GLfloat,
    ),
>;
extern "C" {
    pub static mut glad_glUniformMatrix3x4fv: PFNGLUNIFORMMATRIX3X4FVPROC;
}
pub type PFNGLUNIFORMMATRIX4X3FVPROC = ::std::option::Option<
    unsafe extern "C" fn(
        location: GLint,
        count: GLsizei,
        transpose: GLboolean,
        value: *const GLfloat,
    ),
>;
extern "C" {
    pub static mut glad_glUniformMatrix4x3fv: PFNGLUNIFORMMATRIX4X3FVPROC;
}
extern "C" {
    pub static mut GLAD_GL_VERSION_3_0: ::std::os::raw::c_int;
}
pub type PFNGLCOLORMASKIPROC = ::std::option::Option<
    unsafe extern "C" fn(index: GLuint, r: GLboolean, g: GLboolean, b: GLboolean, a: GLboolean),
>;
extern "C" {
    pub static mut glad_glColorMaski: PFNGLCOLORMASKIPROC;
}
pub type PFNGLGETBOOLEANI_VPROC = ::std::option::Option<
    unsafe extern "C" fn(target: GLenum, index: GLuint, data: *mut GLboolean),
>;
extern "C" {
    pub static mut glad_glGetBooleani_v: PFNGLGETBOOLEANI_VPROC;
}
pub type PFNGLGETINTEGERI_VPROC =
    ::std::option::Option<unsafe extern "C" fn(target: GLenum, index: GLuint, data: *mut GLint)>;
extern "C" {
    pub static mut glad_glGetIntegeri_v: PFNGLGETINTEGERI_VPROC;
}
pub type PFNGLENABLEIPROC =
    ::std::option::Option<unsafe extern "C" fn(target: GLenum, index: GLuint)>;
extern "C" {
    pub static mut glad_glEnablei: PFNGLENABLEIPROC;
}
pub type PFNGLDISABLEIPROC =
    ::std::option::Option<unsafe extern "C" fn(target: GLenum, index: GLuint)>;
extern "C" {
    pub static mut glad_glDisablei: PFNGLDISABLEIPROC;
}
pub type PFNGLISENABLEDIPROC =
    ::std::option::Option<unsafe extern "C" fn(target: GLenum, index: GLuint) -> GLboolean>;
extern "C" {
    pub static mut glad_glIsEnabledi: PFNGLISENABLEDIPROC;
}
pub type PFNGLBEGINTRANSFORMFEEDBACKPROC =
    ::std::option::Option<unsafe extern "C" fn(primitiveMode: GLenum)>;
extern "C" {
    pub static mut glad_glBeginTransformFeedback: PFNGLBEGINTRANSFORMFEEDBACKPROC;
}
pub type PFNGLENDTRANSFORMFEEDBACKPROC = ::std::option::Option<unsafe extern "C" fn()>;
extern "C" {
    pub static mut glad_glEndTransformFeedback: PFNGLENDTRANSFORMFEEDBACKPROC;
}
pub type PFNGLBINDBUFFERRANGEPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        index: GLuint,
        buffer: GLuint,
        offset: GLintptr,
        size: GLsizeiptr,
    ),
>;
extern "C" {
    pub static mut glad_glBindBufferRange: PFNGLBINDBUFFERRANGEPROC;
}
pub type PFNGLBINDBUFFERBASEPROC =
    ::std::option::Option<unsafe extern "C" fn(target: GLenum, index: GLuint, buffer: GLuint)>;
extern "C" {
    pub static mut glad_glBindBufferBase: PFNGLBINDBUFFERBASEPROC;
}
pub type PFNGLTRANSFORMFEEDBACKVARYINGSPROC = ::std::option::Option<
    unsafe extern "C" fn(
        program: GLuint,
        count: GLsizei,
        varyings: *mut *const GLchar,
        bufferMode: GLenum,
    ),
>;
extern "C" {
    pub static mut glad_glTransformFeedbackVaryings: PFNGLTRANSFORMFEEDBACKVARYINGSPROC;
}
pub type PFNGLGETTRANSFORMFEEDBACKVARYINGPROC = ::std::option::Option<
    unsafe extern "C" fn(
        program: GLuint,
        index: GLuint,
        bufSize: GLsizei,
        length: *mut GLsizei,
        size: *mut GLsizei,
        type_: *mut GLenum,
        name: *mut GLchar,
    ),
>;
extern "C" {
    pub static mut glad_glGetTransformFeedbackVarying: PFNGLGETTRANSFORMFEEDBACKVARYINGPROC;
}
pub type PFNGLCLAMPCOLORPROC =
    ::std::option::Option<unsafe extern "C" fn(target: GLenum, clamp: GLenum)>;
extern "C" {
    pub static mut glad_glClampColor: PFNGLCLAMPCOLORPROC;
}
pub type PFNGLBEGINCONDITIONALRENDERPROC =
    ::std::option::Option<unsafe extern "C" fn(id: GLuint, mode: GLenum)>;
extern "C" {
    pub static mut glad_glBeginConditionalRender: PFNGLBEGINCONDITIONALRENDERPROC;
}
pub type PFNGLENDCONDITIONALRENDERPROC = ::std::option::Option<unsafe extern "C" fn()>;
extern "C" {
    pub static mut glad_glEndConditionalRender: PFNGLENDCONDITIONALRENDERPROC;
}
pub type PFNGLVERTEXATTRIBIPOINTERPROC = ::std::option::Option<
    unsafe extern "C" fn(
        index: GLuint,
        size: GLint,
        type_: GLenum,
        stride: GLsizei,
        pointer: *const ::std::os::raw::c_void,
    ),
>;
extern "C" {
    pub static mut glad_glVertexAttribIPointer: PFNGLVERTEXATTRIBIPOINTERPROC;
}
pub type PFNGLGETVERTEXATTRIBIIVPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, pname: GLenum, params: *mut GLint)>;
extern "C" {
    pub static mut glad_glGetVertexAttribIiv: PFNGLGETVERTEXATTRIBIIVPROC;
}
pub type PFNGLGETVERTEXATTRIBIUIVPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, pname: GLenum, params: *mut GLuint)>;
extern "C" {
    pub static mut glad_glGetVertexAttribIuiv: PFNGLGETVERTEXATTRIBIUIVPROC;
}
pub type PFNGLVERTEXATTRIBI1IPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, x: GLint)>;
extern "C" {
    pub static mut glad_glVertexAttribI1i: PFNGLVERTEXATTRIBI1IPROC;
}
pub type PFNGLVERTEXATTRIBI2IPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, x: GLint, y: GLint)>;
extern "C" {
    pub static mut glad_glVertexAttribI2i: PFNGLVERTEXATTRIBI2IPROC;
}
pub type PFNGLVERTEXATTRIBI3IPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, x: GLint, y: GLint, z: GLint)>;
extern "C" {
    pub static mut glad_glVertexAttribI3i: PFNGLVERTEXATTRIBI3IPROC;
}
pub type PFNGLVERTEXATTRIBI4IPROC = ::std::option::Option<
    unsafe extern "C" fn(index: GLuint, x: GLint, y: GLint, z: GLint, w: GLint),
>;
extern "C" {
    pub static mut glad_glVertexAttribI4i: PFNGLVERTEXATTRIBI4IPROC;
}
pub type PFNGLVERTEXATTRIBI1UIPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, x: GLuint)>;
extern "C" {
    pub static mut glad_glVertexAttribI1ui: PFNGLVERTEXATTRIBI1UIPROC;
}
pub type PFNGLVERTEXATTRIBI2UIPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, x: GLuint, y: GLuint)>;
extern "C" {
    pub static mut glad_glVertexAttribI2ui: PFNGLVERTEXATTRIBI2UIPROC;
}
pub type PFNGLVERTEXATTRIBI3UIPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, x: GLuint, y: GLuint, z: GLuint)>;
extern "C" {
    pub static mut glad_glVertexAttribI3ui: PFNGLVERTEXATTRIBI3UIPROC;
}
pub type PFNGLVERTEXATTRIBI4UIPROC = ::std::option::Option<
    unsafe extern "C" fn(index: GLuint, x: GLuint, y: GLuint, z: GLuint, w: GLuint),
>;
extern "C" {
    pub static mut glad_glVertexAttribI4ui: PFNGLVERTEXATTRIBI4UIPROC;
}
pub type PFNGLVERTEXATTRIBI1IVPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLint)>;
extern "C" {
    pub static mut glad_glVertexAttribI1iv: PFNGLVERTEXATTRIBI1IVPROC;
}
pub type PFNGLVERTEXATTRIBI2IVPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLint)>;
extern "C" {
    pub static mut glad_glVertexAttribI2iv: PFNGLVERTEXATTRIBI2IVPROC;
}
pub type PFNGLVERTEXATTRIBI3IVPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLint)>;
extern "C" {
    pub static mut glad_glVertexAttribI3iv: PFNGLVERTEXATTRIBI3IVPROC;
}
pub type PFNGLVERTEXATTRIBI4IVPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLint)>;
extern "C" {
    pub static mut glad_glVertexAttribI4iv: PFNGLVERTEXATTRIBI4IVPROC;
}
pub type PFNGLVERTEXATTRIBI1UIVPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLuint)>;
extern "C" {
    pub static mut glad_glVertexAttribI1uiv: PFNGLVERTEXATTRIBI1UIVPROC;
}
pub type PFNGLVERTEXATTRIBI2UIVPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLuint)>;
extern "C" {
    pub static mut glad_glVertexAttribI2uiv: PFNGLVERTEXATTRIBI2UIVPROC;
}
pub type PFNGLVERTEXATTRIBI3UIVPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLuint)>;
extern "C" {
    pub static mut glad_glVertexAttribI3uiv: PFNGLVERTEXATTRIBI3UIVPROC;
}
pub type PFNGLVERTEXATTRIBI4UIVPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLuint)>;
extern "C" {
    pub static mut glad_glVertexAttribI4uiv: PFNGLVERTEXATTRIBI4UIVPROC;
}
pub type PFNGLVERTEXATTRIBI4BVPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLbyte)>;
extern "C" {
    pub static mut glad_glVertexAttribI4bv: PFNGLVERTEXATTRIBI4BVPROC;
}
pub type PFNGLVERTEXATTRIBI4SVPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLshort)>;
extern "C" {
    pub static mut glad_glVertexAttribI4sv: PFNGLVERTEXATTRIBI4SVPROC;
}
pub type PFNGLVERTEXATTRIBI4UBVPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLubyte)>;
extern "C" {
    pub static mut glad_glVertexAttribI4ubv: PFNGLVERTEXATTRIBI4UBVPROC;
}
pub type PFNGLVERTEXATTRIBI4USVPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLushort)>;
extern "C" {
    pub static mut glad_glVertexAttribI4usv: PFNGLVERTEXATTRIBI4USVPROC;
}
pub type PFNGLGETUNIFORMUIVPROC = ::std::option::Option<
    unsafe extern "C" fn(program: GLuint, location: GLint, params: *mut GLuint),
>;
extern "C" {
    pub static mut glad_glGetUniformuiv: PFNGLGETUNIFORMUIVPROC;
}
pub type PFNGLBINDFRAGDATALOCATIONPROC = ::std::option::Option<
    unsafe extern "C" fn(program: GLuint, color: GLuint, name: *const GLchar),
>;
extern "C" {
    pub static mut glad_glBindFragDataLocation: PFNGLBINDFRAGDATALOCATIONPROC;
}
pub type PFNGLGETFRAGDATALOCATIONPROC =
    ::std::option::Option<unsafe extern "C" fn(program: GLuint, name: *const GLchar) -> GLint>;
extern "C" {
    pub static mut glad_glGetFragDataLocation: PFNGLGETFRAGDATALOCATIONPROC;
}
pub type PFNGLUNIFORM1UIPROC =
    ::std::option::Option<unsafe extern "C" fn(location: GLint, v0: GLuint)>;
extern "C" {
    pub static mut glad_glUniform1ui: PFNGLUNIFORM1UIPROC;
}
pub type PFNGLUNIFORM2UIPROC =
    ::std::option::Option<unsafe extern "C" fn(location: GLint, v0: GLuint, v1: GLuint)>;
extern "C" {
    pub static mut glad_glUniform2ui: PFNGLUNIFORM2UIPROC;
}
pub type PFNGLUNIFORM3UIPROC = ::std::option::Option<
    unsafe extern "C" fn(location: GLint, v0: GLuint, v1: GLuint, v2: GLuint),
>;
extern "C" {
    pub static mut glad_glUniform3ui: PFNGLUNIFORM3UIPROC;
}
pub type PFNGLUNIFORM4UIPROC = ::std::option::Option<
    unsafe extern "C" fn(location: GLint, v0: GLuint, v1: GLuint, v2: GLuint, v3: GLuint),
>;
extern "C" {
    pub static mut glad_glUniform4ui: PFNGLUNIFORM4UIPROC;
}
pub type PFNGLUNIFORM1UIVPROC = ::std::option::Option<
    unsafe extern "C" fn(location: GLint, count: GLsizei, value: *const GLuint),
>;
extern "C" {
    pub static mut glad_glUniform1uiv: PFNGLUNIFORM1UIVPROC;
}
pub type PFNGLUNIFORM2UIVPROC = ::std::option::Option<
    unsafe extern "C" fn(location: GLint, count: GLsizei, value: *const GLuint),
>;
extern "C" {
    pub static mut glad_glUniform2uiv: PFNGLUNIFORM2UIVPROC;
}
pub type PFNGLUNIFORM3UIVPROC = ::std::option::Option<
    unsafe extern "C" fn(location: GLint, count: GLsizei, value: *const GLuint),
>;
extern "C" {
    pub static mut glad_glUniform3uiv: PFNGLUNIFORM3UIVPROC;
}
pub type PFNGLUNIFORM4UIVPROC = ::std::option::Option<
    unsafe extern "C" fn(location: GLint, count: GLsizei, value: *const GLuint),
>;
extern "C" {
    pub static mut glad_glUniform4uiv: PFNGLUNIFORM4UIVPROC;
}
pub type PFNGLTEXPARAMETERIIVPROC = ::std::option::Option<
    unsafe extern "C" fn(target: GLenum, pname: GLenum, params: *const GLint),
>;
extern "C" {
    pub static mut glad_glTexParameterIiv: PFNGLTEXPARAMETERIIVPROC;
}
pub type PFNGLTEXPARAMETERIUIVPROC = ::std::option::Option<
    unsafe extern "C" fn(target: GLenum, pname: GLenum, params: *const GLuint),
>;
extern "C" {
    pub static mut glad_glTexParameterIuiv: PFNGLTEXPARAMETERIUIVPROC;
}
pub type PFNGLGETTEXPARAMETERIIVPROC =
    ::std::option::Option<unsafe extern "C" fn(target: GLenum, pname: GLenum, params: *mut GLint)>;
extern "C" {
    pub static mut glad_glGetTexParameterIiv: PFNGLGETTEXPARAMETERIIVPROC;
}
pub type PFNGLGETTEXPARAMETERIUIVPROC =
    ::std::option::Option<unsafe extern "C" fn(target: GLenum, pname: GLenum, params: *mut GLuint)>;
extern "C" {
    pub static mut glad_glGetTexParameterIuiv: PFNGLGETTEXPARAMETERIUIVPROC;
}
pub type PFNGLCLEARBUFFERIVPROC = ::std::option::Option<
    unsafe extern "C" fn(buffer: GLenum, drawbuffer: GLint, value: *const GLint),
>;
extern "C" {
    pub static mut glad_glClearBufferiv: PFNGLCLEARBUFFERIVPROC;
}
pub type PFNGLCLEARBUFFERUIVPROC = ::std::option::Option<
    unsafe extern "C" fn(buffer: GLenum, drawbuffer: GLint, value: *const GLuint),
>;
extern "C" {
    pub static mut glad_glClearBufferuiv: PFNGLCLEARBUFFERUIVPROC;
}
pub type PFNGLCLEARBUFFERFVPROC = ::std::option::Option<
    unsafe extern "C" fn(buffer: GLenum, drawbuffer: GLint, value: *const GLfloat),
>;
extern "C" {
    pub static mut glad_glClearBufferfv: PFNGLCLEARBUFFERFVPROC;
}
pub type PFNGLCLEARBUFFERFIPROC = ::std::option::Option<
    unsafe extern "C" fn(buffer: GLenum, drawbuffer: GLint, depth: GLfloat, stencil: GLint),
>;
extern "C" {
    pub static mut glad_glClearBufferfi: PFNGLCLEARBUFFERFIPROC;
}
pub type PFNGLGETSTRINGIPROC =
    ::std::option::Option<unsafe extern "C" fn(name: GLenum, index: GLuint) -> *const GLubyte>;
extern "C" {
    pub static mut glad_glGetStringi: PFNGLGETSTRINGIPROC;
}
pub type PFNGLISRENDERBUFFERPROC =
    ::std::option::Option<unsafe extern "C" fn(renderbuffer: GLuint) -> GLboolean>;
extern "C" {
    pub static mut glad_glIsRenderbuffer: PFNGLISRENDERBUFFERPROC;
}
pub type PFNGLBINDRENDERBUFFERPROC =
    ::std::option::Option<unsafe extern "C" fn(target: GLenum, renderbuffer: GLuint)>;
extern "C" {
    pub static mut glad_glBindRenderbuffer: PFNGLBINDRENDERBUFFERPROC;
}
pub type PFNGLDELETERENDERBUFFERSPROC =
    ::std::option::Option<unsafe extern "C" fn(n: GLsizei, renderbuffers: *const GLuint)>;
extern "C" {
    pub static mut glad_glDeleteRenderbuffers: PFNGLDELETERENDERBUFFERSPROC;
}
pub type PFNGLGENRENDERBUFFERSPROC =
    ::std::option::Option<unsafe extern "C" fn(n: GLsizei, renderbuffers: *mut GLuint)>;
extern "C" {
    pub static mut glad_glGenRenderbuffers: PFNGLGENRENDERBUFFERSPROC;
}
pub type PFNGLRENDERBUFFERSTORAGEPROC = ::std::option::Option<
    unsafe extern "C" fn(target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei),
>;
extern "C" {
    pub static mut glad_glRenderbufferStorage: PFNGLRENDERBUFFERSTORAGEPROC;
}
pub type PFNGLGETRENDERBUFFERPARAMETERIVPROC =
    ::std::option::Option<unsafe extern "C" fn(target: GLenum, pname: GLenum, params: *mut GLint)>;
extern "C" {
    pub static mut glad_glGetRenderbufferParameteriv: PFNGLGETRENDERBUFFERPARAMETERIVPROC;
}
pub type PFNGLISFRAMEBUFFERPROC =
    ::std::option::Option<unsafe extern "C" fn(framebuffer: GLuint) -> GLboolean>;
extern "C" {
    pub static mut glad_glIsFramebuffer: PFNGLISFRAMEBUFFERPROC;
}
pub type PFNGLBINDFRAMEBUFFERPROC =
    ::std::option::Option<unsafe extern "C" fn(target: GLenum, framebuffer: GLuint)>;
extern "C" {
    pub static mut glad_glBindFramebuffer: PFNGLBINDFRAMEBUFFERPROC;
}
pub type PFNGLDELETEFRAMEBUFFERSPROC =
    ::std::option::Option<unsafe extern "C" fn(n: GLsizei, framebuffers: *const GLuint)>;
extern "C" {
    pub static mut glad_glDeleteFramebuffers: PFNGLDELETEFRAMEBUFFERSPROC;
}
pub type PFNGLGENFRAMEBUFFERSPROC =
    ::std::option::Option<unsafe extern "C" fn(n: GLsizei, framebuffers: *mut GLuint)>;
extern "C" {
    pub static mut glad_glGenFramebuffers: PFNGLGENFRAMEBUFFERSPROC;
}
pub type PFNGLCHECKFRAMEBUFFERSTATUSPROC =
    ::std::option::Option<unsafe extern "C" fn(target: GLenum) -> GLenum>;
extern "C" {
    pub static mut glad_glCheckFramebufferStatus: PFNGLCHECKFRAMEBUFFERSTATUSPROC;
}
pub type PFNGLFRAMEBUFFERTEXTURE1DPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        attachment: GLenum,
        textarget: GLenum,
        texture: GLuint,
        level: GLint,
    ),
>;
extern "C" {
    pub static mut glad_glFramebufferTexture1D: PFNGLFRAMEBUFFERTEXTURE1DPROC;
}
pub type PFNGLFRAMEBUFFERTEXTURE2DPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        attachment: GLenum,
        textarget: GLenum,
        texture: GLuint,
        level: GLint,
    ),
>;
extern "C" {
    pub static mut glad_glFramebufferTexture2D: PFNGLFRAMEBUFFERTEXTURE2DPROC;
}
pub type PFNGLFRAMEBUFFERTEXTURE3DPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        attachment: GLenum,
        textarget: GLenum,
        texture: GLuint,
        level: GLint,
        zoffset: GLint,
    ),
>;
extern "C" {
    pub static mut glad_glFramebufferTexture3D: PFNGLFRAMEBUFFERTEXTURE3DPROC;
}
pub type PFNGLFRAMEBUFFERRENDERBUFFERPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        attachment: GLenum,
        renderbuffertarget: GLenum,
        renderbuffer: GLuint,
    ),
>;
extern "C" {
    pub static mut glad_glFramebufferRenderbuffer: PFNGLFRAMEBUFFERRENDERBUFFERPROC;
}
pub type PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC = ::std::option::Option<
    unsafe extern "C" fn(target: GLenum, attachment: GLenum, pname: GLenum, params: *mut GLint),
>;
extern "C" {
    pub static mut glad_glGetFramebufferAttachmentParameteriv:
        PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC;
}
pub type PFNGLGENERATEMIPMAPPROC = ::std::option::Option<unsafe extern "C" fn(target: GLenum)>;
extern "C" {
    pub static mut glad_glGenerateMipmap: PFNGLGENERATEMIPMAPPROC;
}
pub type PFNGLBLITFRAMEBUFFERPROC = ::std::option::Option<
    unsafe extern "C" fn(
        srcX0: GLint,
        srcY0: GLint,
        srcX1: GLint,
        srcY1: GLint,
        dstX0: GLint,
        dstY0: GLint,
        dstX1: GLint,
        dstY1: GLint,
        mask: GLbitfield,
        filter: GLenum,
    ),
>;
extern "C" {
    pub static mut glad_glBlitFramebuffer: PFNGLBLITFRAMEBUFFERPROC;
}
pub type PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        samples: GLsizei,
        internalformat: GLenum,
        width: GLsizei,
        height: GLsizei,
    ),
>;
extern "C" {
    pub static mut glad_glRenderbufferStorageMultisample: PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC;
}
pub type PFNGLFRAMEBUFFERTEXTURELAYERPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        attachment: GLenum,
        texture: GLuint,
        level: GLint,
        layer: GLint,
    ),
>;
extern "C" {
    pub static mut glad_glFramebufferTextureLayer: PFNGLFRAMEBUFFERTEXTURELAYERPROC;
}
pub type PFNGLMAPBUFFERRANGEPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        offset: GLintptr,
        length: GLsizeiptr,
        access: GLbitfield,
    ) -> *mut ::std::os::raw::c_void,
>;
extern "C" {
    pub static mut glad_glMapBufferRange: PFNGLMAPBUFFERRANGEPROC;
}
pub type PFNGLFLUSHMAPPEDBUFFERRANGEPROC = ::std::option::Option<
    unsafe extern "C" fn(target: GLenum, offset: GLintptr, length: GLsizeiptr),
>;
extern "C" {
    pub static mut glad_glFlushMappedBufferRange: PFNGLFLUSHMAPPEDBUFFERRANGEPROC;
}
pub type PFNGLBINDVERTEXARRAYPROC = ::std::option::Option<unsafe extern "C" fn(array: GLuint)>;
extern "C" {
    pub static mut glad_glBindVertexArray: PFNGLBINDVERTEXARRAYPROC;
}
pub type PFNGLDELETEVERTEXARRAYSPROC =
    ::std::option::Option<unsafe extern "C" fn(n: GLsizei, arrays: *const GLuint)>;
extern "C" {
    pub static mut glad_glDeleteVertexArrays: PFNGLDELETEVERTEXARRAYSPROC;
}
pub type PFNGLGENVERTEXARRAYSPROC =
    ::std::option::Option<unsafe extern "C" fn(n: GLsizei, arrays: *mut GLuint)>;
extern "C" {
    pub static mut glad_glGenVertexArrays: PFNGLGENVERTEXARRAYSPROC;
}
pub type PFNGLISVERTEXARRAYPROC =
    ::std::option::Option<unsafe extern "C" fn(array: GLuint) -> GLboolean>;
extern "C" {
    pub static mut glad_glIsVertexArray: PFNGLISVERTEXARRAYPROC;
}
extern "C" {
    pub static mut GLAD_GL_VERSION_3_1: ::std::os::raw::c_int;
}
pub type PFNGLDRAWARRAYSINSTANCEDPROC = ::std::option::Option<
    unsafe extern "C" fn(mode: GLenum, first: GLint, count: GLsizei, instancecount: GLsizei),
>;
extern "C" {
    pub static mut glad_glDrawArraysInstanced: PFNGLDRAWARRAYSINSTANCEDPROC;
}
pub type PFNGLDRAWELEMENTSINSTANCEDPROC = ::std::option::Option<
    unsafe extern "C" fn(
        mode: GLenum,
        count: GLsizei,
        type_: GLenum,
        indices: *const ::std::os::raw::c_void,
        instancecount: GLsizei,
    ),
>;
extern "C" {
    pub static mut glad_glDrawElementsInstanced: PFNGLDRAWELEMENTSINSTANCEDPROC;
}
pub type PFNGLTEXBUFFERPROC = ::std::option::Option<
    unsafe extern "C" fn(target: GLenum, internalformat: GLenum, buffer: GLuint),
>;
extern "C" {
    pub static mut glad_glTexBuffer: PFNGLTEXBUFFERPROC;
}
pub type PFNGLPRIMITIVERESTARTINDEXPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint)>;
extern "C" {
    pub static mut glad_glPrimitiveRestartIndex: PFNGLPRIMITIVERESTARTINDEXPROC;
}
pub type PFNGLCOPYBUFFERSUBDATAPROC = ::std::option::Option<
    unsafe extern "C" fn(
        readTarget: GLenum,
        writeTarget: GLenum,
        readOffset: GLintptr,
        writeOffset: GLintptr,
        size: GLsizeiptr,
    ),
>;
extern "C" {
    pub static mut glad_glCopyBufferSubData: PFNGLCOPYBUFFERSUBDATAPROC;
}
pub type PFNGLGETUNIFORMINDICESPROC = ::std::option::Option<
    unsafe extern "C" fn(
        program: GLuint,
        uniformCount: GLsizei,
        uniformNames: *mut *const GLchar,
        uniformIndices: *mut GLuint,
    ),
>;
extern "C" {
    pub static mut glad_glGetUniformIndices: PFNGLGETUNIFORMINDICESPROC;
}
pub type PFNGLGETACTIVEUNIFORMSIVPROC = ::std::option::Option<
    unsafe extern "C" fn(
        program: GLuint,
        uniformCount: GLsizei,
        uniformIndices: *const GLuint,
        pname: GLenum,
        params: *mut GLint,
    ),
>;
extern "C" {
    pub static mut glad_glGetActiveUniformsiv: PFNGLGETACTIVEUNIFORMSIVPROC;
}
pub type PFNGLGETACTIVEUNIFORMNAMEPROC = ::std::option::Option<
    unsafe extern "C" fn(
        program: GLuint,
        uniformIndex: GLuint,
        bufSize: GLsizei,
        length: *mut GLsizei,
        uniformName: *mut GLchar,
    ),
>;
extern "C" {
    pub static mut glad_glGetActiveUniformName: PFNGLGETACTIVEUNIFORMNAMEPROC;
}
pub type PFNGLGETUNIFORMBLOCKINDEXPROC = ::std::option::Option<
    unsafe extern "C" fn(program: GLuint, uniformBlockName: *const GLchar) -> GLuint,
>;
extern "C" {
    pub static mut glad_glGetUniformBlockIndex: PFNGLGETUNIFORMBLOCKINDEXPROC;
}
pub type PFNGLGETACTIVEUNIFORMBLOCKIVPROC = ::std::option::Option<
    unsafe extern "C" fn(
        program: GLuint,
        uniformBlockIndex: GLuint,
        pname: GLenum,
        params: *mut GLint,
    ),
>;
extern "C" {
    pub static mut glad_glGetActiveUniformBlockiv: PFNGLGETACTIVEUNIFORMBLOCKIVPROC;
}
pub type PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC = ::std::option::Option<
    unsafe extern "C" fn(
        program: GLuint,
        uniformBlockIndex: GLuint,
        bufSize: GLsizei,
        length: *mut GLsizei,
        uniformBlockName: *mut GLchar,
    ),
>;
extern "C" {
    pub static mut glad_glGetActiveUniformBlockName: PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC;
}
pub type PFNGLUNIFORMBLOCKBINDINGPROC = ::std::option::Option<
    unsafe extern "C" fn(program: GLuint, uniformBlockIndex: GLuint, uniformBlockBinding: GLuint),
>;
extern "C" {
    pub static mut glad_glUniformBlockBinding: PFNGLUNIFORMBLOCKBINDINGPROC;
}
extern "C" {
    pub static mut GLAD_GL_VERSION_3_2: ::std::os::raw::c_int;
}
pub type PFNGLDRAWELEMENTSBASEVERTEXPROC = ::std::option::Option<
    unsafe extern "C" fn(
        mode: GLenum,
        count: GLsizei,
        type_: GLenum,
        indices: *const ::std::os::raw::c_void,
        basevertex: GLint,
    ),
>;
extern "C" {
    pub static mut glad_glDrawElementsBaseVertex: PFNGLDRAWELEMENTSBASEVERTEXPROC;
}
pub type PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC = ::std::option::Option<
    unsafe extern "C" fn(
        mode: GLenum,
        start: GLuint,
        end: GLuint,
        count: GLsizei,
        type_: GLenum,
        indices: *const ::std::os::raw::c_void,
        basevertex: GLint,
    ),
>;
extern "C" {
    pub static mut glad_glDrawRangeElementsBaseVertex: PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC;
}
pub type PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC = ::std::option::Option<
    unsafe extern "C" fn(
        mode: GLenum,
        count: GLsizei,
        type_: GLenum,
        indices: *const ::std::os::raw::c_void,
        instancecount: GLsizei,
        basevertex: GLint,
    ),
>;
extern "C" {
    pub static mut glad_glDrawElementsInstancedBaseVertex: PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC;
}
pub type PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC = ::std::option::Option<
    unsafe extern "C" fn(
        mode: GLenum,
        count: *const GLsizei,
        type_: GLenum,
        indices: *mut *const ::std::os::raw::c_void,
        drawcount: GLsizei,
        basevertex: *const GLint,
    ),
>;
extern "C" {
    pub static mut glad_glMultiDrawElementsBaseVertex: PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC;
}
pub type PFNGLPROVOKINGVERTEXPROC = ::std::option::Option<unsafe extern "C" fn(mode: GLenum)>;
extern "C" {
    pub static mut glad_glProvokingVertex: PFNGLPROVOKINGVERTEXPROC;
}
pub type PFNGLFENCESYNCPROC =
    ::std::option::Option<unsafe extern "C" fn(condition: GLenum, flags: GLbitfield) -> GLsync>;
extern "C" {
    pub static mut glad_glFenceSync: PFNGLFENCESYNCPROC;
}
pub type PFNGLISSYNCPROC = ::std::option::Option<unsafe extern "C" fn(sync: GLsync) -> GLboolean>;
extern "C" {
    pub static mut glad_glIsSync: PFNGLISSYNCPROC;
}
pub type PFNGLDELETESYNCPROC = ::std::option::Option<unsafe extern "C" fn(sync: GLsync)>;
extern "C" {
    pub static mut glad_glDeleteSync: PFNGLDELETESYNCPROC;
}
pub type PFNGLCLIENTWAITSYNCPROC = ::std::option::Option<
    unsafe extern "C" fn(sync: GLsync, flags: GLbitfield, timeout: GLuint64) -> GLenum,
>;
extern "C" {
    pub static mut glad_glClientWaitSync: PFNGLCLIENTWAITSYNCPROC;
}
pub type PFNGLWAITSYNCPROC =
    ::std::option::Option<unsafe extern "C" fn(sync: GLsync, flags: GLbitfield, timeout: GLuint64)>;
extern "C" {
    pub static mut glad_glWaitSync: PFNGLWAITSYNCPROC;
}
pub type PFNGLGETINTEGER64VPROC =
    ::std::option::Option<unsafe extern "C" fn(pname: GLenum, data: *mut GLint64)>;
extern "C" {
    pub static mut glad_glGetInteger64v: PFNGLGETINTEGER64VPROC;
}
pub type PFNGLGETSYNCIVPROC = ::std::option::Option<
    unsafe extern "C" fn(
        sync: GLsync,
        pname: GLenum,
        bufSize: GLsizei,
        length: *mut GLsizei,
        values: *mut GLint,
    ),
>;
extern "C" {
    pub static mut glad_glGetSynciv: PFNGLGETSYNCIVPROC;
}
pub type PFNGLGETINTEGER64I_VPROC =
    ::std::option::Option<unsafe extern "C" fn(target: GLenum, index: GLuint, data: *mut GLint64)>;
extern "C" {
    pub static mut glad_glGetInteger64i_v: PFNGLGETINTEGER64I_VPROC;
}
pub type PFNGLGETBUFFERPARAMETERI64VPROC = ::std::option::Option<
    unsafe extern "C" fn(target: GLenum, pname: GLenum, params: *mut GLint64),
>;
extern "C" {
    pub static mut glad_glGetBufferParameteri64v: PFNGLGETBUFFERPARAMETERI64VPROC;
}
pub type PFNGLFRAMEBUFFERTEXTUREPROC = ::std::option::Option<
    unsafe extern "C" fn(target: GLenum, attachment: GLenum, texture: GLuint, level: GLint),
>;
extern "C" {
    pub static mut glad_glFramebufferTexture: PFNGLFRAMEBUFFERTEXTUREPROC;
}
pub type PFNGLTEXIMAGE2DMULTISAMPLEPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        samples: GLsizei,
        internalformat: GLenum,
        width: GLsizei,
        height: GLsizei,
        fixedsamplelocations: GLboolean,
    ),
>;
extern "C" {
    pub static mut glad_glTexImage2DMultisample: PFNGLTEXIMAGE2DMULTISAMPLEPROC;
}
pub type PFNGLTEXIMAGE3DMULTISAMPLEPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        samples: GLsizei,
        internalformat: GLenum,
        width: GLsizei,
        height: GLsizei,
        depth: GLsizei,
        fixedsamplelocations: GLboolean,
    ),
>;
extern "C" {
    pub static mut glad_glTexImage3DMultisample: PFNGLTEXIMAGE3DMULTISAMPLEPROC;
}
pub type PFNGLGETMULTISAMPLEFVPROC =
    ::std::option::Option<unsafe extern "C" fn(pname: GLenum, index: GLuint, val: *mut GLfloat)>;
extern "C" {
    pub static mut glad_glGetMultisamplefv: PFNGLGETMULTISAMPLEFVPROC;
}
pub type PFNGLSAMPLEMASKIPROC =
    ::std::option::Option<unsafe extern "C" fn(maskNumber: GLuint, mask: GLbitfield)>;
extern "C" {
    pub static mut glad_glSampleMaski: PFNGLSAMPLEMASKIPROC;
}
extern "C" {
    pub static mut GLAD_GL_VERSION_3_3: ::std::os::raw::c_int;
}
pub type PFNGLBINDFRAGDATALOCATIONINDEXEDPROC = ::std::option::Option<
    unsafe extern "C" fn(program: GLuint, colorNumber: GLuint, index: GLuint, name: *const GLchar),
>;
extern "C" {
    pub static mut glad_glBindFragDataLocationIndexed: PFNGLBINDFRAGDATALOCATIONINDEXEDPROC;
}
pub type PFNGLGETFRAGDATAINDEXPROC =
    ::std::option::Option<unsafe extern "C" fn(program: GLuint, name: *const GLchar) -> GLint>;
extern "C" {
    pub static mut glad_glGetFragDataIndex: PFNGLGETFRAGDATAINDEXPROC;
}
pub type PFNGLGENSAMPLERSPROC =
    ::std::option::Option<unsafe extern "C" fn(count: GLsizei, samplers: *mut GLuint)>;
extern "C" {
    pub static mut glad_glGenSamplers: PFNGLGENSAMPLERSPROC;
}
pub type PFNGLDELETESAMPLERSPROC =
    ::std::option::Option<unsafe extern "C" fn(count: GLsizei, samplers: *const GLuint)>;
extern "C" {
    pub static mut glad_glDeleteSamplers: PFNGLDELETESAMPLERSPROC;
}
pub type PFNGLISSAMPLERPROC =
    ::std::option::Option<unsafe extern "C" fn(sampler: GLuint) -> GLboolean>;
extern "C" {
    pub static mut glad_glIsSampler: PFNGLISSAMPLERPROC;
}
pub type PFNGLBINDSAMPLERPROC =
    ::std::option::Option<unsafe extern "C" fn(unit: GLuint, sampler: GLuint)>;
extern "C" {
    pub static mut glad_glBindSampler: PFNGLBINDSAMPLERPROC;
}
pub type PFNGLSAMPLERPARAMETERIPROC =
    ::std::option::Option<unsafe extern "C" fn(sampler: GLuint, pname: GLenum, param: GLint)>;
extern "C" {
    pub static mut glad_glSamplerParameteri: PFNGLSAMPLERPARAMETERIPROC;
}
pub type PFNGLSAMPLERPARAMETERIVPROC = ::std::option::Option<
    unsafe extern "C" fn(sampler: GLuint, pname: GLenum, param: *const GLint),
>;
extern "C" {
    pub static mut glad_glSamplerParameteriv: PFNGLSAMPLERPARAMETERIVPROC;
}
pub type PFNGLSAMPLERPARAMETERFPROC =
    ::std::option::Option<unsafe extern "C" fn(sampler: GLuint, pname: GLenum, param: GLfloat)>;
extern "C" {
    pub static mut glad_glSamplerParameterf: PFNGLSAMPLERPARAMETERFPROC;
}
pub type PFNGLSAMPLERPARAMETERFVPROC = ::std::option::Option<
    unsafe extern "C" fn(sampler: GLuint, pname: GLenum, param: *const GLfloat),
>;
extern "C" {
    pub static mut glad_glSamplerParameterfv: PFNGLSAMPLERPARAMETERFVPROC;
}
pub type PFNGLSAMPLERPARAMETERIIVPROC = ::std::option::Option<
    unsafe extern "C" fn(sampler: GLuint, pname: GLenum, param: *const GLint),
>;
extern "C" {
    pub static mut glad_glSamplerParameterIiv: PFNGLSAMPLERPARAMETERIIVPROC;
}
pub type PFNGLSAMPLERPARAMETERIUIVPROC = ::std::option::Option<
    unsafe extern "C" fn(sampler: GLuint, pname: GLenum, param: *const GLuint),
>;
extern "C" {
    pub static mut glad_glSamplerParameterIuiv: PFNGLSAMPLERPARAMETERIUIVPROC;
}
pub type PFNGLGETSAMPLERPARAMETERIVPROC =
    ::std::option::Option<unsafe extern "C" fn(sampler: GLuint, pname: GLenum, params: *mut GLint)>;
extern "C" {
    pub static mut glad_glGetSamplerParameteriv: PFNGLGETSAMPLERPARAMETERIVPROC;
}
pub type PFNGLGETSAMPLERPARAMETERIIVPROC =
    ::std::option::Option<unsafe extern "C" fn(sampler: GLuint, pname: GLenum, params: *mut GLint)>;
extern "C" {
    pub static mut glad_glGetSamplerParameterIiv: PFNGLGETSAMPLERPARAMETERIIVPROC;
}
pub type PFNGLGETSAMPLERPARAMETERFVPROC = ::std::option::Option<
    unsafe extern "C" fn(sampler: GLuint, pname: GLenum, params: *mut GLfloat),
>;
extern "C" {
    pub static mut glad_glGetSamplerParameterfv: PFNGLGETSAMPLERPARAMETERFVPROC;
}
pub type PFNGLGETSAMPLERPARAMETERIUIVPROC = ::std::option::Option<
    unsafe extern "C" fn(sampler: GLuint, pname: GLenum, params: *mut GLuint),
>;
extern "C" {
    pub static mut glad_glGetSamplerParameterIuiv: PFNGLGETSAMPLERPARAMETERIUIVPROC;
}
pub type PFNGLQUERYCOUNTERPROC =
    ::std::option::Option<unsafe extern "C" fn(id: GLuint, target: GLenum)>;
extern "C" {
    pub static mut glad_glQueryCounter: PFNGLQUERYCOUNTERPROC;
}
pub type PFNGLGETQUERYOBJECTI64VPROC =
    ::std::option::Option<unsafe extern "C" fn(id: GLuint, pname: GLenum, params: *mut GLint64)>;
extern "C" {
    pub static mut glad_glGetQueryObjecti64v: PFNGLGETQUERYOBJECTI64VPROC;
}
pub type PFNGLGETQUERYOBJECTUI64VPROC =
    ::std::option::Option<unsafe extern "C" fn(id: GLuint, pname: GLenum, params: *mut GLuint64)>;
extern "C" {
    pub static mut glad_glGetQueryObjectui64v: PFNGLGETQUERYOBJECTUI64VPROC;
}
pub type PFNGLVERTEXATTRIBDIVISORPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, divisor: GLuint)>;
extern "C" {
    pub static mut glad_glVertexAttribDivisor: PFNGLVERTEXATTRIBDIVISORPROC;
}
pub type PFNGLVERTEXATTRIBP1UIPROC = ::std::option::Option<
    unsafe extern "C" fn(index: GLuint, type_: GLenum, normalized: GLboolean, value: GLuint),
>;
extern "C" {
    pub static mut glad_glVertexAttribP1ui: PFNGLVERTEXATTRIBP1UIPROC;
}
pub type PFNGLVERTEXATTRIBP1UIVPROC = ::std::option::Option<
    unsafe extern "C" fn(index: GLuint, type_: GLenum, normalized: GLboolean, value: *const GLuint),
>;
extern "C" {
    pub static mut glad_glVertexAttribP1uiv: PFNGLVERTEXATTRIBP1UIVPROC;
}
pub type PFNGLVERTEXATTRIBP2UIPROC = ::std::option::Option<
    unsafe extern "C" fn(index: GLuint, type_: GLenum, normalized: GLboolean, value: GLuint),
>;
extern "C" {
    pub static mut glad_glVertexAttribP2ui: PFNGLVERTEXATTRIBP2UIPROC;
}
pub type PFNGLVERTEXATTRIBP2UIVPROC = ::std::option::Option<
    unsafe extern "C" fn(index: GLuint, type_: GLenum, normalized: GLboolean, value: *const GLuint),
>;
extern "C" {
    pub static mut glad_glVertexAttribP2uiv: PFNGLVERTEXATTRIBP2UIVPROC;
}
pub type PFNGLVERTEXATTRIBP3UIPROC = ::std::option::Option<
    unsafe extern "C" fn(index: GLuint, type_: GLenum, normalized: GLboolean, value: GLuint),
>;
extern "C" {
    pub static mut glad_glVertexAttribP3ui: PFNGLVERTEXATTRIBP3UIPROC;
}
pub type PFNGLVERTEXATTRIBP3UIVPROC = ::std::option::Option<
    unsafe extern "C" fn(index: GLuint, type_: GLenum, normalized: GLboolean, value: *const GLuint),
>;
extern "C" {
    pub static mut glad_glVertexAttribP3uiv: PFNGLVERTEXATTRIBP3UIVPROC;
}
pub type PFNGLVERTEXATTRIBP4UIPROC = ::std::option::Option<
    unsafe extern "C" fn(index: GLuint, type_: GLenum, normalized: GLboolean, value: GLuint),
>;
extern "C" {
    pub static mut glad_glVertexAttribP4ui: PFNGLVERTEXATTRIBP4UIPROC;
}
pub type PFNGLVERTEXATTRIBP4UIVPROC = ::std::option::Option<
    unsafe extern "C" fn(index: GLuint, type_: GLenum, normalized: GLboolean, value: *const GLuint),
>;
extern "C" {
    pub static mut glad_glVertexAttribP4uiv: PFNGLVERTEXATTRIBP4UIVPROC;
}
pub type PFNGLVERTEXP2UIPROC =
    ::std::option::Option<unsafe extern "C" fn(type_: GLenum, value: GLuint)>;
extern "C" {
    pub static mut glad_glVertexP2ui: PFNGLVERTEXP2UIPROC;
}
pub type PFNGLVERTEXP2UIVPROC =
    ::std::option::Option<unsafe extern "C" fn(type_: GLenum, value: *const GLuint)>;
extern "C" {
    pub static mut glad_glVertexP2uiv: PFNGLVERTEXP2UIVPROC;
}
pub type PFNGLVERTEXP3UIPROC =
    ::std::option::Option<unsafe extern "C" fn(type_: GLenum, value: GLuint)>;
extern "C" {
    pub static mut glad_glVertexP3ui: PFNGLVERTEXP3UIPROC;
}
pub type PFNGLVERTEXP3UIVPROC =
    ::std::option::Option<unsafe extern "C" fn(type_: GLenum, value: *const GLuint)>;
extern "C" {
    pub static mut glad_glVertexP3uiv: PFNGLVERTEXP3UIVPROC;
}
pub type PFNGLVERTEXP4UIPROC =
    ::std::option::Option<unsafe extern "C" fn(type_: GLenum, value: GLuint)>;
extern "C" {
    pub static mut glad_glVertexP4ui: PFNGLVERTEXP4UIPROC;
}
pub type PFNGLVERTEXP4UIVPROC =
    ::std::option::Option<unsafe extern "C" fn(type_: GLenum, value: *const GLuint)>;
extern "C" {
    pub static mut glad_glVertexP4uiv: PFNGLVERTEXP4UIVPROC;
}
pub type PFNGLTEXCOORDP1UIPROC =
    ::std::option::Option<unsafe extern "C" fn(type_: GLenum, coords: GLuint)>;
extern "C" {
    pub static mut glad_glTexCoordP1ui: PFNGLTEXCOORDP1UIPROC;
}
pub type PFNGLTEXCOORDP1UIVPROC =
    ::std::option::Option<unsafe extern "C" fn(type_: GLenum, coords: *const GLuint)>;
extern "C" {
    pub static mut glad_glTexCoordP1uiv: PFNGLTEXCOORDP1UIVPROC;
}
pub type PFNGLTEXCOORDP2UIPROC =
    ::std::option::Option<unsafe extern "C" fn(type_: GLenum, coords: GLuint)>;
extern "C" {
    pub static mut glad_glTexCoordP2ui: PFNGLTEXCOORDP2UIPROC;
}
pub type PFNGLTEXCOORDP2UIVPROC =
    ::std::option::Option<unsafe extern "C" fn(type_: GLenum, coords: *const GLuint)>;
extern "C" {
    pub static mut glad_glTexCoordP2uiv: PFNGLTEXCOORDP2UIVPROC;
}
pub type PFNGLTEXCOORDP3UIPROC =
    ::std::option::Option<unsafe extern "C" fn(type_: GLenum, coords: GLuint)>;
extern "C" {
    pub static mut glad_glTexCoordP3ui: PFNGLTEXCOORDP3UIPROC;
}
pub type PFNGLTEXCOORDP3UIVPROC =
    ::std::option::Option<unsafe extern "C" fn(type_: GLenum, coords: *const GLuint)>;
extern "C" {
    pub static mut glad_glTexCoordP3uiv: PFNGLTEXCOORDP3UIVPROC;
}
pub type PFNGLTEXCOORDP4UIPROC =
    ::std::option::Option<unsafe extern "C" fn(type_: GLenum, coords: GLuint)>;
extern "C" {
    pub static mut glad_glTexCoordP4ui: PFNGLTEXCOORDP4UIPROC;
}
pub type PFNGLTEXCOORDP4UIVPROC =
    ::std::option::Option<unsafe extern "C" fn(type_: GLenum, coords: *const GLuint)>;
extern "C" {
    pub static mut glad_glTexCoordP4uiv: PFNGLTEXCOORDP4UIVPROC;
}
pub type PFNGLMULTITEXCOORDP1UIPROC =
    ::std::option::Option<unsafe extern "C" fn(texture: GLenum, type_: GLenum, coords: GLuint)>;
extern "C" {
    pub static mut glad_glMultiTexCoordP1ui: PFNGLMULTITEXCOORDP1UIPROC;
}
pub type PFNGLMULTITEXCOORDP1UIVPROC = ::std::option::Option<
    unsafe extern "C" fn(texture: GLenum, type_: GLenum, coords: *const GLuint),
>;
extern "C" {
    pub static mut glad_glMultiTexCoordP1uiv: PFNGLMULTITEXCOORDP1UIVPROC;
}
pub type PFNGLMULTITEXCOORDP2UIPROC =
    ::std::option::Option<unsafe extern "C" fn(texture: GLenum, type_: GLenum, coords: GLuint)>;
extern "C" {
    pub static mut glad_glMultiTexCoordP2ui: PFNGLMULTITEXCOORDP2UIPROC;
}
pub type PFNGLMULTITEXCOORDP2UIVPROC = ::std::option::Option<
    unsafe extern "C" fn(texture: GLenum, type_: GLenum, coords: *const GLuint),
>;
extern "C" {
    pub static mut glad_glMultiTexCoordP2uiv: PFNGLMULTITEXCOORDP2UIVPROC;
}
pub type PFNGLMULTITEXCOORDP3UIPROC =
    ::std::option::Option<unsafe extern "C" fn(texture: GLenum, type_: GLenum, coords: GLuint)>;
extern "C" {
    pub static mut glad_glMultiTexCoordP3ui: PFNGLMULTITEXCOORDP3UIPROC;
}
pub type PFNGLMULTITEXCOORDP3UIVPROC = ::std::option::Option<
    unsafe extern "C" fn(texture: GLenum, type_: GLenum, coords: *const GLuint),
>;
extern "C" {
    pub static mut glad_glMultiTexCoordP3uiv: PFNGLMULTITEXCOORDP3UIVPROC;
}
pub type PFNGLMULTITEXCOORDP4UIPROC =
    ::std::option::Option<unsafe extern "C" fn(texture: GLenum, type_: GLenum, coords: GLuint)>;
extern "C" {
    pub static mut glad_glMultiTexCoordP4ui: PFNGLMULTITEXCOORDP4UIPROC;
}
pub type PFNGLMULTITEXCOORDP4UIVPROC = ::std::option::Option<
    unsafe extern "C" fn(texture: GLenum, type_: GLenum, coords: *const GLuint),
>;
extern "C" {
    pub static mut glad_glMultiTexCoordP4uiv: PFNGLMULTITEXCOORDP4UIVPROC;
}
pub type PFNGLNORMALP3UIPROC =
    ::std::option::Option<unsafe extern "C" fn(type_: GLenum, coords: GLuint)>;
extern "C" {
    pub static mut glad_glNormalP3ui: PFNGLNORMALP3UIPROC;
}
pub type PFNGLNORMALP3UIVPROC =
    ::std::option::Option<unsafe extern "C" fn(type_: GLenum, coords: *const GLuint)>;
extern "C" {
    pub static mut glad_glNormalP3uiv: PFNGLNORMALP3UIVPROC;
}
pub type PFNGLCOLORP3UIPROC =
    ::std::option::Option<unsafe extern "C" fn(type_: GLenum, color: GLuint)>;
extern "C" {
    pub static mut glad_glColorP3ui: PFNGLCOLORP3UIPROC;
}
pub type PFNGLCOLORP3UIVPROC =
    ::std::option::Option<unsafe extern "C" fn(type_: GLenum, color: *const GLuint)>;
extern "C" {
    pub static mut glad_glColorP3uiv: PFNGLCOLORP3UIVPROC;
}
pub type PFNGLCOLORP4UIPROC =
    ::std::option::Option<unsafe extern "C" fn(type_: GLenum, color: GLuint)>;
extern "C" {
    pub static mut glad_glColorP4ui: PFNGLCOLORP4UIPROC;
}
pub type PFNGLCOLORP4UIVPROC =
    ::std::option::Option<unsafe extern "C" fn(type_: GLenum, color: *const GLuint)>;
extern "C" {
    pub static mut glad_glColorP4uiv: PFNGLCOLORP4UIVPROC;
}
pub type PFNGLSECONDARYCOLORP3UIPROC =
    ::std::option::Option<unsafe extern "C" fn(type_: GLenum, color: GLuint)>;
extern "C" {
    pub static mut glad_glSecondaryColorP3ui: PFNGLSECONDARYCOLORP3UIPROC;
}
pub type PFNGLSECONDARYCOLORP3UIVPROC =
    ::std::option::Option<unsafe extern "C" fn(type_: GLenum, color: *const GLuint)>;
extern "C" {
    pub static mut glad_glSecondaryColorP3uiv: PFNGLSECONDARYCOLORP3UIVPROC;
}
extern "C" {
    pub static mut GLAD_GL_AMD_debug_output: ::std::os::raw::c_int;
}
pub type PFNGLDEBUGMESSAGEENABLEAMDPROC = ::std::option::Option<
    unsafe extern "C" fn(
        category: GLenum,
        severity: GLenum,
        count: GLsizei,
        ids: *const GLuint,
        enabled: GLboolean,
    ),
>;
extern "C" {
    pub static mut glad_glDebugMessageEnableAMD: PFNGLDEBUGMESSAGEENABLEAMDPROC;
}
pub type PFNGLDEBUGMESSAGEINSERTAMDPROC = ::std::option::Option<
    unsafe extern "C" fn(
        category: GLenum,
        severity: GLenum,
        id: GLuint,
        length: GLsizei,
        buf: *const GLchar,
    ),
>;
extern "C" {
    pub static mut glad_glDebugMessageInsertAMD: PFNGLDEBUGMESSAGEINSERTAMDPROC;
}
pub type PFNGLDEBUGMESSAGECALLBACKAMDPROC = ::std::option::Option<
    unsafe extern "C" fn(callback: GLDEBUGPROCAMD, userParam: *mut ::std::os::raw::c_void),
>;
extern "C" {
    pub static mut glad_glDebugMessageCallbackAMD: PFNGLDEBUGMESSAGECALLBACKAMDPROC;
}
pub type PFNGLGETDEBUGMESSAGELOGAMDPROC = ::std::option::Option<
    unsafe extern "C" fn(
        count: GLuint,
        bufsize: GLsizei,
        categories: *mut GLenum,
        severities: *mut GLuint,
        ids: *mut GLuint,
        lengths: *mut GLsizei,
        message: *mut GLchar,
    ) -> GLuint,
>;
extern "C" {
    pub static mut glad_glGetDebugMessageLogAMD: PFNGLGETDEBUGMESSAGELOGAMDPROC;
}
extern "C" {
    pub static mut GLAD_GL_AMD_query_buffer_object: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut GLAD_GL_ARB_ES2_compatibility: ::std::os::raw::c_int;
}
pub type PFNGLRELEASESHADERCOMPILERPROC = ::std::option::Option<unsafe extern "C" fn()>;
extern "C" {
    pub static mut glad_glReleaseShaderCompiler: PFNGLRELEASESHADERCOMPILERPROC;
}
pub type PFNGLSHADERBINARYPROC = ::std::option::Option<
    unsafe extern "C" fn(
        count: GLsizei,
        shaders: *const GLuint,
        binaryformat: GLenum,
        binary: *const ::std::os::raw::c_void,
        length: GLsizei,
    ),
>;
extern "C" {
    pub static mut glad_glShaderBinary: PFNGLSHADERBINARYPROC;
}
pub type PFNGLGETSHADERPRECISIONFORMATPROC = ::std::option::Option<
    unsafe extern "C" fn(
        shadertype: GLenum,
        precisiontype: GLenum,
        range: *mut GLint,
        precision: *mut GLint,
    ),
>;
extern "C" {
    pub static mut glad_glGetShaderPrecisionFormat: PFNGLGETSHADERPRECISIONFORMATPROC;
}
pub type PFNGLDEPTHRANGEFPROC = ::std::option::Option<unsafe extern "C" fn(n: GLfloat, f: GLfloat)>;
extern "C" {
    pub static mut glad_glDepthRangef: PFNGLDEPTHRANGEFPROC;
}
pub type PFNGLCLEARDEPTHFPROC = ::std::option::Option<unsafe extern "C" fn(d: GLfloat)>;
extern "C" {
    pub static mut glad_glClearDepthf: PFNGLCLEARDEPTHFPROC;
}
extern "C" {
    pub static mut GLAD_GL_ARB_ES3_compatibility: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut GLAD_GL_ARB_buffer_storage: ::std::os::raw::c_int;
}
pub type PFNGLBUFFERSTORAGEPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        size: GLsizeiptr,
        data: *const ::std::os::raw::c_void,
        flags: GLbitfield,
    ),
>;
extern "C" {
    pub static mut glad_glBufferStorage: PFNGLBUFFERSTORAGEPROC;
}
extern "C" {
    pub static mut GLAD_GL_ARB_compatibility: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut GLAD_GL_ARB_compressed_texture_pixel_storage: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut GLAD_GL_ARB_debug_output: ::std::os::raw::c_int;
}
pub type PFNGLDEBUGMESSAGECONTROLARBPROC = ::std::option::Option<
    unsafe extern "C" fn(
        source: GLenum,
        type_: GLenum,
        severity: GLenum,
        count: GLsizei,
        ids: *const GLuint,
        enabled: GLboolean,
    ),
>;
extern "C" {
    pub static mut glad_glDebugMessageControlARB: PFNGLDEBUGMESSAGECONTROLARBPROC;
}
pub type PFNGLDEBUGMESSAGEINSERTARBPROC = ::std::option::Option<
    unsafe extern "C" fn(
        source: GLenum,
        type_: GLenum,
        id: GLuint,
        severity: GLenum,
        length: GLsizei,
        buf: *const GLchar,
    ),
>;
extern "C" {
    pub static mut glad_glDebugMessageInsertARB: PFNGLDEBUGMESSAGEINSERTARBPROC;
}
pub type PFNGLDEBUGMESSAGECALLBACKARBPROC = ::std::option::Option<
    unsafe extern "C" fn(callback: GLDEBUGPROCARB, userParam: *const ::std::os::raw::c_void),
>;
extern "C" {
    pub static mut glad_glDebugMessageCallbackARB: PFNGLDEBUGMESSAGECALLBACKARBPROC;
}
pub type PFNGLGETDEBUGMESSAGELOGARBPROC = ::std::option::Option<
    unsafe extern "C" fn(
        count: GLuint,
        bufSize: GLsizei,
        sources: *mut GLenum,
        types: *mut GLenum,
        ids: *mut GLuint,
        severities: *mut GLenum,
        lengths: *mut GLsizei,
        messageLog: *mut GLchar,
    ) -> GLuint,
>;
extern "C" {
    pub static mut glad_glGetDebugMessageLogARB: PFNGLGETDEBUGMESSAGELOGARBPROC;
}
extern "C" {
    pub static mut GLAD_GL_ARB_depth_buffer_float: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut GLAD_GL_ARB_depth_clamp: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut GLAD_GL_ARB_depth_texture: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut GLAD_GL_ARB_draw_buffers: ::std::os::raw::c_int;
}
pub type PFNGLDRAWBUFFERSARBPROC =
    ::std::option::Option<unsafe extern "C" fn(n: GLsizei, bufs: *const GLenum)>;
extern "C" {
    pub static mut glad_glDrawBuffersARB: PFNGLDRAWBUFFERSARBPROC;
}
extern "C" {
    pub static mut GLAD_GL_ARB_draw_buffers_blend: ::std::os::raw::c_int;
}
pub type PFNGLBLENDEQUATIONIARBPROC =
    ::std::option::Option<unsafe extern "C" fn(buf: GLuint, mode: GLenum)>;
extern "C" {
    pub static mut glad_glBlendEquationiARB: PFNGLBLENDEQUATIONIARBPROC;
}
pub type PFNGLBLENDEQUATIONSEPARATEIARBPROC =
    ::std::option::Option<unsafe extern "C" fn(buf: GLuint, modeRGB: GLenum, modeAlpha: GLenum)>;
extern "C" {
    pub static mut glad_glBlendEquationSeparateiARB: PFNGLBLENDEQUATIONSEPARATEIARBPROC;
}
pub type PFNGLBLENDFUNCIARBPROC =
    ::std::option::Option<unsafe extern "C" fn(buf: GLuint, src: GLenum, dst: GLenum)>;
extern "C" {
    pub static mut glad_glBlendFunciARB: PFNGLBLENDFUNCIARBPROC;
}
pub type PFNGLBLENDFUNCSEPARATEIARBPROC = ::std::option::Option<
    unsafe extern "C" fn(
        buf: GLuint,
        srcRGB: GLenum,
        dstRGB: GLenum,
        srcAlpha: GLenum,
        dstAlpha: GLenum,
    ),
>;
extern "C" {
    pub static mut glad_glBlendFuncSeparateiARB: PFNGLBLENDFUNCSEPARATEIARBPROC;
}
extern "C" {
    pub static mut GLAD_GL_ARB_explicit_attrib_location: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut GLAD_GL_ARB_explicit_uniform_location: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut GLAD_GL_ARB_fragment_program: ::std::os::raw::c_int;
}
pub type PFNGLPROGRAMSTRINGARBPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        format: GLenum,
        len: GLsizei,
        string: *const ::std::os::raw::c_void,
    ),
>;
extern "C" {
    pub static mut glad_glProgramStringARB: PFNGLPROGRAMSTRINGARBPROC;
}
pub type PFNGLBINDPROGRAMARBPROC =
    ::std::option::Option<unsafe extern "C" fn(target: GLenum, program: GLuint)>;
extern "C" {
    pub static mut glad_glBindProgramARB: PFNGLBINDPROGRAMARBPROC;
}
pub type PFNGLDELETEPROGRAMSARBPROC =
    ::std::option::Option<unsafe extern "C" fn(n: GLsizei, programs: *const GLuint)>;
extern "C" {
    pub static mut glad_glDeleteProgramsARB: PFNGLDELETEPROGRAMSARBPROC;
}
pub type PFNGLGENPROGRAMSARBPROC =
    ::std::option::Option<unsafe extern "C" fn(n: GLsizei, programs: *mut GLuint)>;
extern "C" {
    pub static mut glad_glGenProgramsARB: PFNGLGENPROGRAMSARBPROC;
}
pub type PFNGLPROGRAMENVPARAMETER4DARBPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        index: GLuint,
        x: GLdouble,
        y: GLdouble,
        z: GLdouble,
        w: GLdouble,
    ),
>;
extern "C" {
    pub static mut glad_glProgramEnvParameter4dARB: PFNGLPROGRAMENVPARAMETER4DARBPROC;
}
pub type PFNGLPROGRAMENVPARAMETER4DVARBPROC = ::std::option::Option<
    unsafe extern "C" fn(target: GLenum, index: GLuint, params: *const GLdouble),
>;
extern "C" {
    pub static mut glad_glProgramEnvParameter4dvARB: PFNGLPROGRAMENVPARAMETER4DVARBPROC;
}
pub type PFNGLPROGRAMENVPARAMETER4FARBPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        index: GLuint,
        x: GLfloat,
        y: GLfloat,
        z: GLfloat,
        w: GLfloat,
    ),
>;
extern "C" {
    pub static mut glad_glProgramEnvParameter4fARB: PFNGLPROGRAMENVPARAMETER4FARBPROC;
}
pub type PFNGLPROGRAMENVPARAMETER4FVARBPROC = ::std::option::Option<
    unsafe extern "C" fn(target: GLenum, index: GLuint, params: *const GLfloat),
>;
extern "C" {
    pub static mut glad_glProgramEnvParameter4fvARB: PFNGLPROGRAMENVPARAMETER4FVARBPROC;
}
pub type PFNGLPROGRAMLOCALPARAMETER4DARBPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        index: GLuint,
        x: GLdouble,
        y: GLdouble,
        z: GLdouble,
        w: GLdouble,
    ),
>;
extern "C" {
    pub static mut glad_glProgramLocalParameter4dARB: PFNGLPROGRAMLOCALPARAMETER4DARBPROC;
}
pub type PFNGLPROGRAMLOCALPARAMETER4DVARBPROC = ::std::option::Option<
    unsafe extern "C" fn(target: GLenum, index: GLuint, params: *const GLdouble),
>;
extern "C" {
    pub static mut glad_glProgramLocalParameter4dvARB: PFNGLPROGRAMLOCALPARAMETER4DVARBPROC;
}
pub type PFNGLPROGRAMLOCALPARAMETER4FARBPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        index: GLuint,
        x: GLfloat,
        y: GLfloat,
        z: GLfloat,
        w: GLfloat,
    ),
>;
extern "C" {
    pub static mut glad_glProgramLocalParameter4fARB: PFNGLPROGRAMLOCALPARAMETER4FARBPROC;
}
pub type PFNGLPROGRAMLOCALPARAMETER4FVARBPROC = ::std::option::Option<
    unsafe extern "C" fn(target: GLenum, index: GLuint, params: *const GLfloat),
>;
extern "C" {
    pub static mut glad_glProgramLocalParameter4fvARB: PFNGLPROGRAMLOCALPARAMETER4FVARBPROC;
}
pub type PFNGLGETPROGRAMENVPARAMETERDVARBPROC = ::std::option::Option<
    unsafe extern "C" fn(target: GLenum, index: GLuint, params: *mut GLdouble),
>;
extern "C" {
    pub static mut glad_glGetProgramEnvParameterdvARB: PFNGLGETPROGRAMENVPARAMETERDVARBPROC;
}
pub type PFNGLGETPROGRAMENVPARAMETERFVARBPROC = ::std::option::Option<
    unsafe extern "C" fn(target: GLenum, index: GLuint, params: *mut GLfloat),
>;
extern "C" {
    pub static mut glad_glGetProgramEnvParameterfvARB: PFNGLGETPROGRAMENVPARAMETERFVARBPROC;
}
pub type PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC = ::std::option::Option<
    unsafe extern "C" fn(target: GLenum, index: GLuint, params: *mut GLdouble),
>;
extern "C" {
    pub static mut glad_glGetProgramLocalParameterdvARB: PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC;
}
pub type PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC = ::std::option::Option<
    unsafe extern "C" fn(target: GLenum, index: GLuint, params: *mut GLfloat),
>;
extern "C" {
    pub static mut glad_glGetProgramLocalParameterfvARB: PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC;
}
pub type PFNGLGETPROGRAMIVARBPROC =
    ::std::option::Option<unsafe extern "C" fn(target: GLenum, pname: GLenum, params: *mut GLint)>;
extern "C" {
    pub static mut glad_glGetProgramivARB: PFNGLGETPROGRAMIVARBPROC;
}
pub type PFNGLGETPROGRAMSTRINGARBPROC = ::std::option::Option<
    unsafe extern "C" fn(target: GLenum, pname: GLenum, string: *mut ::std::os::raw::c_void),
>;
extern "C" {
    pub static mut glad_glGetProgramStringARB: PFNGLGETPROGRAMSTRINGARBPROC;
}
pub type PFNGLISPROGRAMARBPROC =
    ::std::option::Option<unsafe extern "C" fn(program: GLuint) -> GLboolean>;
extern "C" {
    pub static mut glad_glIsProgramARB: PFNGLISPROGRAMARBPROC;
}
extern "C" {
    pub static mut GLAD_GL_ARB_fragment_shader: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut GLAD_GL_ARB_framebuffer_object: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut GLAD_GL_ARB_framebuffer_sRGB: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut GLAD_GL_ARB_multisample: ::std::os::raw::c_int;
}
pub type PFNGLSAMPLECOVERAGEARBPROC =
    ::std::option::Option<unsafe extern "C" fn(value: GLfloat, invert: GLboolean)>;
extern "C" {
    pub static mut glad_glSampleCoverageARB: PFNGLSAMPLECOVERAGEARBPROC;
}
extern "C" {
    pub static mut GLAD_GL_ARB_sample_locations: ::std::os::raw::c_int;
}
pub type PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC = ::std::option::Option<
    unsafe extern "C" fn(target: GLenum, start: GLuint, count: GLsizei, v: *const GLfloat),
>;
extern "C" {
    pub static mut glad_glFramebufferSampleLocationsfvARB: PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC;
}
pub type PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC = ::std::option::Option<
    unsafe extern "C" fn(framebuffer: GLuint, start: GLuint, count: GLsizei, v: *const GLfloat),
>;
extern "C" {
    pub static mut glad_glNamedFramebufferSampleLocationsfvARB:
        PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC;
}
pub type PFNGLEVALUATEDEPTHVALUESARBPROC = ::std::option::Option<unsafe extern "C" fn()>;
extern "C" {
    pub static mut glad_glEvaluateDepthValuesARB: PFNGLEVALUATEDEPTHVALUESARBPROC;
}
extern "C" {
    pub static mut GLAD_GL_ARB_texture_compression: ::std::os::raw::c_int;
}
pub type PFNGLCOMPRESSEDTEXIMAGE3DARBPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        level: GLint,
        internalformat: GLenum,
        width: GLsizei,
        height: GLsizei,
        depth: GLsizei,
        border: GLint,
        imageSize: GLsizei,
        data: *const ::std::os::raw::c_void,
    ),
>;
extern "C" {
    pub static mut glad_glCompressedTexImage3DARB: PFNGLCOMPRESSEDTEXIMAGE3DARBPROC;
}
pub type PFNGLCOMPRESSEDTEXIMAGE2DARBPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        level: GLint,
        internalformat: GLenum,
        width: GLsizei,
        height: GLsizei,
        border: GLint,
        imageSize: GLsizei,
        data: *const ::std::os::raw::c_void,
    ),
>;
extern "C" {
    pub static mut glad_glCompressedTexImage2DARB: PFNGLCOMPRESSEDTEXIMAGE2DARBPROC;
}
pub type PFNGLCOMPRESSEDTEXIMAGE1DARBPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        level: GLint,
        internalformat: GLenum,
        width: GLsizei,
        border: GLint,
        imageSize: GLsizei,
        data: *const ::std::os::raw::c_void,
    ),
>;
extern "C" {
    pub static mut glad_glCompressedTexImage1DARB: PFNGLCOMPRESSEDTEXIMAGE1DARBPROC;
}
pub type PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        level: GLint,
        xoffset: GLint,
        yoffset: GLint,
        zoffset: GLint,
        width: GLsizei,
        height: GLsizei,
        depth: GLsizei,
        format: GLenum,
        imageSize: GLsizei,
        data: *const ::std::os::raw::c_void,
    ),
>;
extern "C" {
    pub static mut glad_glCompressedTexSubImage3DARB: PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC;
}
pub type PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        level: GLint,
        xoffset: GLint,
        yoffset: GLint,
        width: GLsizei,
        height: GLsizei,
        format: GLenum,
        imageSize: GLsizei,
        data: *const ::std::os::raw::c_void,
    ),
>;
extern "C" {
    pub static mut glad_glCompressedTexSubImage2DARB: PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC;
}
pub type PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        level: GLint,
        xoffset: GLint,
        width: GLsizei,
        format: GLenum,
        imageSize: GLsizei,
        data: *const ::std::os::raw::c_void,
    ),
>;
extern "C" {
    pub static mut glad_glCompressedTexSubImage1DARB: PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC;
}
pub type PFNGLGETCOMPRESSEDTEXIMAGEARBPROC = ::std::option::Option<
    unsafe extern "C" fn(target: GLenum, level: GLint, img: *mut ::std::os::raw::c_void),
>;
extern "C" {
    pub static mut glad_glGetCompressedTexImageARB: PFNGLGETCOMPRESSEDTEXIMAGEARBPROC;
}
extern "C" {
    pub static mut GLAD_GL_ARB_texture_float: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut GLAD_GL_ARB_texture_multisample: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut GLAD_GL_ARB_texture_non_power_of_two: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut GLAD_GL_ARB_texture_rg: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut GLAD_GL_ARB_texture_swizzle: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut GLAD_GL_ARB_uniform_buffer_object: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut GLAD_GL_ARB_vertex_array_object: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut GLAD_GL_ARB_vertex_attrib_binding: ::std::os::raw::c_int;
}
pub type PFNGLBINDVERTEXBUFFERPROC = ::std::option::Option<
    unsafe extern "C" fn(bindingindex: GLuint, buffer: GLuint, offset: GLintptr, stride: GLsizei),
>;
extern "C" {
    pub static mut glad_glBindVertexBuffer: PFNGLBINDVERTEXBUFFERPROC;
}
pub type PFNGLVERTEXATTRIBFORMATPROC = ::std::option::Option<
    unsafe extern "C" fn(
        attribindex: GLuint,
        size: GLint,
        type_: GLenum,
        normalized: GLboolean,
        relativeoffset: GLuint,
    ),
>;
extern "C" {
    pub static mut glad_glVertexAttribFormat: PFNGLVERTEXATTRIBFORMATPROC;
}
pub type PFNGLVERTEXATTRIBIFORMATPROC = ::std::option::Option<
    unsafe extern "C" fn(attribindex: GLuint, size: GLint, type_: GLenum, relativeoffset: GLuint),
>;
extern "C" {
    pub static mut glad_glVertexAttribIFormat: PFNGLVERTEXATTRIBIFORMATPROC;
}
pub type PFNGLVERTEXATTRIBLFORMATPROC = ::std::option::Option<
    unsafe extern "C" fn(attribindex: GLuint, size: GLint, type_: GLenum, relativeoffset: GLuint),
>;
extern "C" {
    pub static mut glad_glVertexAttribLFormat: PFNGLVERTEXATTRIBLFORMATPROC;
}
pub type PFNGLVERTEXATTRIBBINDINGPROC =
    ::std::option::Option<unsafe extern "C" fn(attribindex: GLuint, bindingindex: GLuint)>;
extern "C" {
    pub static mut glad_glVertexAttribBinding: PFNGLVERTEXATTRIBBINDINGPROC;
}
pub type PFNGLVERTEXBINDINGDIVISORPROC =
    ::std::option::Option<unsafe extern "C" fn(bindingindex: GLuint, divisor: GLuint)>;
extern "C" {
    pub static mut glad_glVertexBindingDivisor: PFNGLVERTEXBINDINGDIVISORPROC;
}
extern "C" {
    pub static mut GLAD_GL_ARB_vertex_buffer_object: ::std::os::raw::c_int;
}
pub type PFNGLBINDBUFFERARBPROC =
    ::std::option::Option<unsafe extern "C" fn(target: GLenum, buffer: GLuint)>;
extern "C" {
    pub static mut glad_glBindBufferARB: PFNGLBINDBUFFERARBPROC;
}
pub type PFNGLDELETEBUFFERSARBPROC =
    ::std::option::Option<unsafe extern "C" fn(n: GLsizei, buffers: *const GLuint)>;
extern "C" {
    pub static mut glad_glDeleteBuffersARB: PFNGLDELETEBUFFERSARBPROC;
}
pub type PFNGLGENBUFFERSARBPROC =
    ::std::option::Option<unsafe extern "C" fn(n: GLsizei, buffers: *mut GLuint)>;
extern "C" {
    pub static mut glad_glGenBuffersARB: PFNGLGENBUFFERSARBPROC;
}
pub type PFNGLISBUFFERARBPROC =
    ::std::option::Option<unsafe extern "C" fn(buffer: GLuint) -> GLboolean>;
extern "C" {
    pub static mut glad_glIsBufferARB: PFNGLISBUFFERARBPROC;
}
pub type PFNGLBUFFERDATAARBPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        size: GLsizeiptrARB,
        data: *const ::std::os::raw::c_void,
        usage: GLenum,
    ),
>;
extern "C" {
    pub static mut glad_glBufferDataARB: PFNGLBUFFERDATAARBPROC;
}
pub type PFNGLBUFFERSUBDATAARBPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        offset: GLintptrARB,
        size: GLsizeiptrARB,
        data: *const ::std::os::raw::c_void,
    ),
>;
extern "C" {
    pub static mut glad_glBufferSubDataARB: PFNGLBUFFERSUBDATAARBPROC;
}
pub type PFNGLGETBUFFERSUBDATAARBPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        offset: GLintptrARB,
        size: GLsizeiptrARB,
        data: *mut ::std::os::raw::c_void,
    ),
>;
extern "C" {
    pub static mut glad_glGetBufferSubDataARB: PFNGLGETBUFFERSUBDATAARBPROC;
}
pub type PFNGLMAPBUFFERARBPROC = ::std::option::Option<
    unsafe extern "C" fn(target: GLenum, access: GLenum) -> *mut ::std::os::raw::c_void,
>;
extern "C" {
    pub static mut glad_glMapBufferARB: PFNGLMAPBUFFERARBPROC;
}
pub type PFNGLUNMAPBUFFERARBPROC =
    ::std::option::Option<unsafe extern "C" fn(target: GLenum) -> GLboolean>;
extern "C" {
    pub static mut glad_glUnmapBufferARB: PFNGLUNMAPBUFFERARBPROC;
}
pub type PFNGLGETBUFFERPARAMETERIVARBPROC =
    ::std::option::Option<unsafe extern "C" fn(target: GLenum, pname: GLenum, params: *mut GLint)>;
extern "C" {
    pub static mut glad_glGetBufferParameterivARB: PFNGLGETBUFFERPARAMETERIVARBPROC;
}
pub type PFNGLGETBUFFERPOINTERVARBPROC = ::std::option::Option<
    unsafe extern "C" fn(target: GLenum, pname: GLenum, params: *mut *mut ::std::os::raw::c_void),
>;
extern "C" {
    pub static mut glad_glGetBufferPointervARB: PFNGLGETBUFFERPOINTERVARBPROC;
}
extern "C" {
    pub static mut GLAD_GL_ARB_vertex_program: ::std::os::raw::c_int;
}
pub type PFNGLVERTEXATTRIB1DARBPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, x: GLdouble)>;
extern "C" {
    pub static mut glad_glVertexAttrib1dARB: PFNGLVERTEXATTRIB1DARBPROC;
}
pub type PFNGLVERTEXATTRIB1DVARBPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLdouble)>;
extern "C" {
    pub static mut glad_glVertexAttrib1dvARB: PFNGLVERTEXATTRIB1DVARBPROC;
}
pub type PFNGLVERTEXATTRIB1FARBPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, x: GLfloat)>;
extern "C" {
    pub static mut glad_glVertexAttrib1fARB: PFNGLVERTEXATTRIB1FARBPROC;
}
pub type PFNGLVERTEXATTRIB1FVARBPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLfloat)>;
extern "C" {
    pub static mut glad_glVertexAttrib1fvARB: PFNGLVERTEXATTRIB1FVARBPROC;
}
pub type PFNGLVERTEXATTRIB1SARBPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, x: GLshort)>;
extern "C" {
    pub static mut glad_glVertexAttrib1sARB: PFNGLVERTEXATTRIB1SARBPROC;
}
pub type PFNGLVERTEXATTRIB1SVARBPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLshort)>;
extern "C" {
    pub static mut glad_glVertexAttrib1svARB: PFNGLVERTEXATTRIB1SVARBPROC;
}
pub type PFNGLVERTEXATTRIB2DARBPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, x: GLdouble, y: GLdouble)>;
extern "C" {
    pub static mut glad_glVertexAttrib2dARB: PFNGLVERTEXATTRIB2DARBPROC;
}
pub type PFNGLVERTEXATTRIB2DVARBPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLdouble)>;
extern "C" {
    pub static mut glad_glVertexAttrib2dvARB: PFNGLVERTEXATTRIB2DVARBPROC;
}
pub type PFNGLVERTEXATTRIB2FARBPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, x: GLfloat, y: GLfloat)>;
extern "C" {
    pub static mut glad_glVertexAttrib2fARB: PFNGLVERTEXATTRIB2FARBPROC;
}
pub type PFNGLVERTEXATTRIB2FVARBPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLfloat)>;
extern "C" {
    pub static mut glad_glVertexAttrib2fvARB: PFNGLVERTEXATTRIB2FVARBPROC;
}
pub type PFNGLVERTEXATTRIB2SARBPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, x: GLshort, y: GLshort)>;
extern "C" {
    pub static mut glad_glVertexAttrib2sARB: PFNGLVERTEXATTRIB2SARBPROC;
}
pub type PFNGLVERTEXATTRIB2SVARBPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLshort)>;
extern "C" {
    pub static mut glad_glVertexAttrib2svARB: PFNGLVERTEXATTRIB2SVARBPROC;
}
pub type PFNGLVERTEXATTRIB3DARBPROC = ::std::option::Option<
    unsafe extern "C" fn(index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble),
>;
extern "C" {
    pub static mut glad_glVertexAttrib3dARB: PFNGLVERTEXATTRIB3DARBPROC;
}
pub type PFNGLVERTEXATTRIB3DVARBPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLdouble)>;
extern "C" {
    pub static mut glad_glVertexAttrib3dvARB: PFNGLVERTEXATTRIB3DVARBPROC;
}
pub type PFNGLVERTEXATTRIB3FARBPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat)>;
extern "C" {
    pub static mut glad_glVertexAttrib3fARB: PFNGLVERTEXATTRIB3FARBPROC;
}
pub type PFNGLVERTEXATTRIB3FVARBPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLfloat)>;
extern "C" {
    pub static mut glad_glVertexAttrib3fvARB: PFNGLVERTEXATTRIB3FVARBPROC;
}
pub type PFNGLVERTEXATTRIB3SARBPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, x: GLshort, y: GLshort, z: GLshort)>;
extern "C" {
    pub static mut glad_glVertexAttrib3sARB: PFNGLVERTEXATTRIB3SARBPROC;
}
pub type PFNGLVERTEXATTRIB3SVARBPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLshort)>;
extern "C" {
    pub static mut glad_glVertexAttrib3svARB: PFNGLVERTEXATTRIB3SVARBPROC;
}
pub type PFNGLVERTEXATTRIB4NBVARBPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLbyte)>;
extern "C" {
    pub static mut glad_glVertexAttrib4NbvARB: PFNGLVERTEXATTRIB4NBVARBPROC;
}
pub type PFNGLVERTEXATTRIB4NIVARBPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLint)>;
extern "C" {
    pub static mut glad_glVertexAttrib4NivARB: PFNGLVERTEXATTRIB4NIVARBPROC;
}
pub type PFNGLVERTEXATTRIB4NSVARBPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLshort)>;
extern "C" {
    pub static mut glad_glVertexAttrib4NsvARB: PFNGLVERTEXATTRIB4NSVARBPROC;
}
pub type PFNGLVERTEXATTRIB4NUBARBPROC = ::std::option::Option<
    unsafe extern "C" fn(index: GLuint, x: GLubyte, y: GLubyte, z: GLubyte, w: GLubyte),
>;
extern "C" {
    pub static mut glad_glVertexAttrib4NubARB: PFNGLVERTEXATTRIB4NUBARBPROC;
}
pub type PFNGLVERTEXATTRIB4NUBVARBPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLubyte)>;
extern "C" {
    pub static mut glad_glVertexAttrib4NubvARB: PFNGLVERTEXATTRIB4NUBVARBPROC;
}
pub type PFNGLVERTEXATTRIB4NUIVARBPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLuint)>;
extern "C" {
    pub static mut glad_glVertexAttrib4NuivARB: PFNGLVERTEXATTRIB4NUIVARBPROC;
}
pub type PFNGLVERTEXATTRIB4NUSVARBPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLushort)>;
extern "C" {
    pub static mut glad_glVertexAttrib4NusvARB: PFNGLVERTEXATTRIB4NUSVARBPROC;
}
pub type PFNGLVERTEXATTRIB4BVARBPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLbyte)>;
extern "C" {
    pub static mut glad_glVertexAttrib4bvARB: PFNGLVERTEXATTRIB4BVARBPROC;
}
pub type PFNGLVERTEXATTRIB4DARBPROC = ::std::option::Option<
    unsafe extern "C" fn(index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble),
>;
extern "C" {
    pub static mut glad_glVertexAttrib4dARB: PFNGLVERTEXATTRIB4DARBPROC;
}
pub type PFNGLVERTEXATTRIB4DVARBPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLdouble)>;
extern "C" {
    pub static mut glad_glVertexAttrib4dvARB: PFNGLVERTEXATTRIB4DVARBPROC;
}
pub type PFNGLVERTEXATTRIB4FARBPROC = ::std::option::Option<
    unsafe extern "C" fn(index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat),
>;
extern "C" {
    pub static mut glad_glVertexAttrib4fARB: PFNGLVERTEXATTRIB4FARBPROC;
}
pub type PFNGLVERTEXATTRIB4FVARBPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLfloat)>;
extern "C" {
    pub static mut glad_glVertexAttrib4fvARB: PFNGLVERTEXATTRIB4FVARBPROC;
}
pub type PFNGLVERTEXATTRIB4IVARBPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLint)>;
extern "C" {
    pub static mut glad_glVertexAttrib4ivARB: PFNGLVERTEXATTRIB4IVARBPROC;
}
pub type PFNGLVERTEXATTRIB4SARBPROC = ::std::option::Option<
    unsafe extern "C" fn(index: GLuint, x: GLshort, y: GLshort, z: GLshort, w: GLshort),
>;
extern "C" {
    pub static mut glad_glVertexAttrib4sARB: PFNGLVERTEXATTRIB4SARBPROC;
}
pub type PFNGLVERTEXATTRIB4SVARBPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLshort)>;
extern "C" {
    pub static mut glad_glVertexAttrib4svARB: PFNGLVERTEXATTRIB4SVARBPROC;
}
pub type PFNGLVERTEXATTRIB4UBVARBPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLubyte)>;
extern "C" {
    pub static mut glad_glVertexAttrib4ubvARB: PFNGLVERTEXATTRIB4UBVARBPROC;
}
pub type PFNGLVERTEXATTRIB4UIVARBPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLuint)>;
extern "C" {
    pub static mut glad_glVertexAttrib4uivARB: PFNGLVERTEXATTRIB4UIVARBPROC;
}
pub type PFNGLVERTEXATTRIB4USVARBPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, v: *const GLushort)>;
extern "C" {
    pub static mut glad_glVertexAttrib4usvARB: PFNGLVERTEXATTRIB4USVARBPROC;
}
pub type PFNGLVERTEXATTRIBPOINTERARBPROC = ::std::option::Option<
    unsafe extern "C" fn(
        index: GLuint,
        size: GLint,
        type_: GLenum,
        normalized: GLboolean,
        stride: GLsizei,
        pointer: *const ::std::os::raw::c_void,
    ),
>;
extern "C" {
    pub static mut glad_glVertexAttribPointerARB: PFNGLVERTEXATTRIBPOINTERARBPROC;
}
pub type PFNGLENABLEVERTEXATTRIBARRAYARBPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint)>;
extern "C" {
    pub static mut glad_glEnableVertexAttribArrayARB: PFNGLENABLEVERTEXATTRIBARRAYARBPROC;
}
pub type PFNGLDISABLEVERTEXATTRIBARRAYARBPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint)>;
extern "C" {
    pub static mut glad_glDisableVertexAttribArrayARB: PFNGLDISABLEVERTEXATTRIBARRAYARBPROC;
}
pub type PFNGLGETVERTEXATTRIBDVARBPROC = ::std::option::Option<
    unsafe extern "C" fn(index: GLuint, pname: GLenum, params: *mut GLdouble),
>;
extern "C" {
    pub static mut glad_glGetVertexAttribdvARB: PFNGLGETVERTEXATTRIBDVARBPROC;
}
pub type PFNGLGETVERTEXATTRIBFVARBPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, pname: GLenum, params: *mut GLfloat)>;
extern "C" {
    pub static mut glad_glGetVertexAttribfvARB: PFNGLGETVERTEXATTRIBFVARBPROC;
}
pub type PFNGLGETVERTEXATTRIBIVARBPROC =
    ::std::option::Option<unsafe extern "C" fn(index: GLuint, pname: GLenum, params: *mut GLint)>;
extern "C" {
    pub static mut glad_glGetVertexAttribivARB: PFNGLGETVERTEXATTRIBIVARBPROC;
}
pub type PFNGLGETVERTEXATTRIBPOINTERVARBPROC = ::std::option::Option<
    unsafe extern "C" fn(index: GLuint, pname: GLenum, pointer: *mut *mut ::std::os::raw::c_void),
>;
extern "C" {
    pub static mut glad_glGetVertexAttribPointervARB: PFNGLGETVERTEXATTRIBPOINTERVARBPROC;
}
extern "C" {
    pub static mut GLAD_GL_ARB_vertex_shader: ::std::os::raw::c_int;
}
pub type PFNGLBINDATTRIBLOCATIONARBPROC = ::std::option::Option<
    unsafe extern "C" fn(programObj: GLhandleARB, index: GLuint, name: *const GLcharARB),
>;
extern "C" {
    pub static mut glad_glBindAttribLocationARB: PFNGLBINDATTRIBLOCATIONARBPROC;
}
pub type PFNGLGETACTIVEATTRIBARBPROC = ::std::option::Option<
    unsafe extern "C" fn(
        programObj: GLhandleARB,
        index: GLuint,
        maxLength: GLsizei,
        length: *mut GLsizei,
        size: *mut GLint,
        type_: *mut GLenum,
        name: *mut GLcharARB,
    ),
>;
extern "C" {
    pub static mut glad_glGetActiveAttribARB: PFNGLGETACTIVEATTRIBARBPROC;
}
pub type PFNGLGETATTRIBLOCATIONARBPROC = ::std::option::Option<
    unsafe extern "C" fn(programObj: GLhandleARB, name: *const GLcharARB) -> GLint,
>;
extern "C" {
    pub static mut glad_glGetAttribLocationARB: PFNGLGETATTRIBLOCATIONARBPROC;
}
extern "C" {
    pub static mut GLAD_GL_ATI_element_array: ::std::os::raw::c_int;
}
pub type PFNGLELEMENTPOINTERATIPROC = ::std::option::Option<
    unsafe extern "C" fn(type_: GLenum, pointer: *const ::std::os::raw::c_void),
>;
extern "C" {
    pub static mut glad_glElementPointerATI: PFNGLELEMENTPOINTERATIPROC;
}
pub type PFNGLDRAWELEMENTARRAYATIPROC =
    ::std::option::Option<unsafe extern "C" fn(mode: GLenum, count: GLsizei)>;
extern "C" {
    pub static mut glad_glDrawElementArrayATI: PFNGLDRAWELEMENTARRAYATIPROC;
}
pub type PFNGLDRAWRANGEELEMENTARRAYATIPROC = ::std::option::Option<
    unsafe extern "C" fn(mode: GLenum, start: GLuint, end: GLuint, count: GLsizei),
>;
extern "C" {
    pub static mut glad_glDrawRangeElementArrayATI: PFNGLDRAWRANGEELEMENTARRAYATIPROC;
}
extern "C" {
    pub static mut GLAD_GL_ATI_fragment_shader: ::std::os::raw::c_int;
}
pub type PFNGLGENFRAGMENTSHADERSATIPROC =
    ::std::option::Option<unsafe extern "C" fn(range: GLuint) -> GLuint>;
extern "C" {
    pub static mut glad_glGenFragmentShadersATI: PFNGLGENFRAGMENTSHADERSATIPROC;
}
pub type PFNGLBINDFRAGMENTSHADERATIPROC = ::std::option::Option<unsafe extern "C" fn(id: GLuint)>;
extern "C" {
    pub static mut glad_glBindFragmentShaderATI: PFNGLBINDFRAGMENTSHADERATIPROC;
}
pub type PFNGLDELETEFRAGMENTSHADERATIPROC = ::std::option::Option<unsafe extern "C" fn(id: GLuint)>;
extern "C" {
    pub static mut glad_glDeleteFragmentShaderATI: PFNGLDELETEFRAGMENTSHADERATIPROC;
}
pub type PFNGLBEGINFRAGMENTSHADERATIPROC = ::std::option::Option<unsafe extern "C" fn()>;
extern "C" {
    pub static mut glad_glBeginFragmentShaderATI: PFNGLBEGINFRAGMENTSHADERATIPROC;
}
pub type PFNGLENDFRAGMENTSHADERATIPROC = ::std::option::Option<unsafe extern "C" fn()>;
extern "C" {
    pub static mut glad_glEndFragmentShaderATI: PFNGLENDFRAGMENTSHADERATIPROC;
}
pub type PFNGLPASSTEXCOORDATIPROC =
    ::std::option::Option<unsafe extern "C" fn(dst: GLuint, coord: GLuint, swizzle: GLenum)>;
extern "C" {
    pub static mut glad_glPassTexCoordATI: PFNGLPASSTEXCOORDATIPROC;
}
pub type PFNGLSAMPLEMAPATIPROC =
    ::std::option::Option<unsafe extern "C" fn(dst: GLuint, interp: GLuint, swizzle: GLenum)>;
extern "C" {
    pub static mut glad_glSampleMapATI: PFNGLSAMPLEMAPATIPROC;
}
pub type PFNGLCOLORFRAGMENTOP1ATIPROC = ::std::option::Option<
    unsafe extern "C" fn(
        op: GLenum,
        dst: GLuint,
        dstMask: GLuint,
        dstMod: GLuint,
        arg1: GLuint,
        arg1Rep: GLuint,
        arg1Mod: GLuint,
    ),
>;
extern "C" {
    pub static mut glad_glColorFragmentOp1ATI: PFNGLCOLORFRAGMENTOP1ATIPROC;
}
pub type PFNGLCOLORFRAGMENTOP2ATIPROC = ::std::option::Option<
    unsafe extern "C" fn(
        op: GLenum,
        dst: GLuint,
        dstMask: GLuint,
        dstMod: GLuint,
        arg1: GLuint,
        arg1Rep: GLuint,
        arg1Mod: GLuint,
        arg2: GLuint,
        arg2Rep: GLuint,
        arg2Mod: GLuint,
    ),
>;
extern "C" {
    pub static mut glad_glColorFragmentOp2ATI: PFNGLCOLORFRAGMENTOP2ATIPROC;
}
pub type PFNGLCOLORFRAGMENTOP3ATIPROC = ::std::option::Option<
    unsafe extern "C" fn(
        op: GLenum,
        dst: GLuint,
        dstMask: GLuint,
        dstMod: GLuint,
        arg1: GLuint,
        arg1Rep: GLuint,
        arg1Mod: GLuint,
        arg2: GLuint,
        arg2Rep: GLuint,
        arg2Mod: GLuint,
        arg3: GLuint,
        arg3Rep: GLuint,
        arg3Mod: GLuint,
    ),
>;
extern "C" {
    pub static mut glad_glColorFragmentOp3ATI: PFNGLCOLORFRAGMENTOP3ATIPROC;
}
pub type PFNGLALPHAFRAGMENTOP1ATIPROC = ::std::option::Option<
    unsafe extern "C" fn(
        op: GLenum,
        dst: GLuint,
        dstMod: GLuint,
        arg1: GLuint,
        arg1Rep: GLuint,
        arg1Mod: GLuint,
    ),
>;
extern "C" {
    pub static mut glad_glAlphaFragmentOp1ATI: PFNGLALPHAFRAGMENTOP1ATIPROC;
}
pub type PFNGLALPHAFRAGMENTOP2ATIPROC = ::std::option::Option<
    unsafe extern "C" fn(
        op: GLenum,
        dst: GLuint,
        dstMod: GLuint,
        arg1: GLuint,
        arg1Rep: GLuint,
        arg1Mod: GLuint,
        arg2: GLuint,
        arg2Rep: GLuint,
        arg2Mod: GLuint,
    ),
>;
extern "C" {
    pub static mut glad_glAlphaFragmentOp2ATI: PFNGLALPHAFRAGMENTOP2ATIPROC;
}
pub type PFNGLALPHAFRAGMENTOP3ATIPROC = ::std::option::Option<
    unsafe extern "C" fn(
        op: GLenum,
        dst: GLuint,
        dstMod: GLuint,
        arg1: GLuint,
        arg1Rep: GLuint,
        arg1Mod: GLuint,
        arg2: GLuint,
        arg2Rep: GLuint,
        arg2Mod: GLuint,
        arg3: GLuint,
        arg3Rep: GLuint,
        arg3Mod: GLuint,
    ),
>;
extern "C" {
    pub static mut glad_glAlphaFragmentOp3ATI: PFNGLALPHAFRAGMENTOP3ATIPROC;
}
pub type PFNGLSETFRAGMENTSHADERCONSTANTATIPROC =
    ::std::option::Option<unsafe extern "C" fn(dst: GLuint, value: *const GLfloat)>;
extern "C" {
    pub static mut glad_glSetFragmentShaderConstantATI: PFNGLSETFRAGMENTSHADERCONSTANTATIPROC;
}
extern "C" {
    pub static mut GLAD_GL_ATI_vertex_array_object: ::std::os::raw::c_int;
}
pub type PFNGLNEWOBJECTBUFFERATIPROC = ::std::option::Option<
    unsafe extern "C" fn(
        size: GLsizei,
        pointer: *const ::std::os::raw::c_void,
        usage: GLenum,
    ) -> GLuint,
>;
extern "C" {
    pub static mut glad_glNewObjectBufferATI: PFNGLNEWOBJECTBUFFERATIPROC;
}
pub type PFNGLISOBJECTBUFFERATIPROC =
    ::std::option::Option<unsafe extern "C" fn(buffer: GLuint) -> GLboolean>;
extern "C" {
    pub static mut glad_glIsObjectBufferATI: PFNGLISOBJECTBUFFERATIPROC;
}
pub type PFNGLUPDATEOBJECTBUFFERATIPROC = ::std::option::Option<
    unsafe extern "C" fn(
        buffer: GLuint,
        offset: GLuint,
        size: GLsizei,
        pointer: *const ::std::os::raw::c_void,
        preserve: GLenum,
    ),
>;
extern "C" {
    pub static mut glad_glUpdateObjectBufferATI: PFNGLUPDATEOBJECTBUFFERATIPROC;
}
pub type PFNGLGETOBJECTBUFFERFVATIPROC = ::std::option::Option<
    unsafe extern "C" fn(buffer: GLuint, pname: GLenum, params: *mut GLfloat),
>;
extern "C" {
    pub static mut glad_glGetObjectBufferfvATI: PFNGLGETOBJECTBUFFERFVATIPROC;
}
pub type PFNGLGETOBJECTBUFFERIVATIPROC =
    ::std::option::Option<unsafe extern "C" fn(buffer: GLuint, pname: GLenum, params: *mut GLint)>;
extern "C" {
    pub static mut glad_glGetObjectBufferivATI: PFNGLGETOBJECTBUFFERIVATIPROC;
}
pub type PFNGLFREEOBJECTBUFFERATIPROC = ::std::option::Option<unsafe extern "C" fn(buffer: GLuint)>;
extern "C" {
    pub static mut glad_glFreeObjectBufferATI: PFNGLFREEOBJECTBUFFERATIPROC;
}
pub type PFNGLARRAYOBJECTATIPROC = ::std::option::Option<
    unsafe extern "C" fn(
        array: GLenum,
        size: GLint,
        type_: GLenum,
        stride: GLsizei,
        buffer: GLuint,
        offset: GLuint,
    ),
>;
extern "C" {
    pub static mut glad_glArrayObjectATI: PFNGLARRAYOBJECTATIPROC;
}
pub type PFNGLGETARRAYOBJECTFVATIPROC =
    ::std::option::Option<unsafe extern "C" fn(array: GLenum, pname: GLenum, params: *mut GLfloat)>;
extern "C" {
    pub static mut glad_glGetArrayObjectfvATI: PFNGLGETARRAYOBJECTFVATIPROC;
}
pub type PFNGLGETARRAYOBJECTIVATIPROC =
    ::std::option::Option<unsafe extern "C" fn(array: GLenum, pname: GLenum, params: *mut GLint)>;
extern "C" {
    pub static mut glad_glGetArrayObjectivATI: PFNGLGETARRAYOBJECTIVATIPROC;
}
pub type PFNGLVARIANTARRAYOBJECTATIPROC = ::std::option::Option<
    unsafe extern "C" fn(
        id: GLuint,
        type_: GLenum,
        stride: GLsizei,
        buffer: GLuint,
        offset: GLuint,
    ),
>;
extern "C" {
    pub static mut glad_glVariantArrayObjectATI: PFNGLVARIANTARRAYOBJECTATIPROC;
}
pub type PFNGLGETVARIANTARRAYOBJECTFVATIPROC =
    ::std::option::Option<unsafe extern "C" fn(id: GLuint, pname: GLenum, params: *mut GLfloat)>;
extern "C" {
    pub static mut glad_glGetVariantArrayObjectfvATI: PFNGLGETVARIANTARRAYOBJECTFVATIPROC;
}
pub type PFNGLGETVARIANTARRAYOBJECTIVATIPROC =
    ::std::option::Option<unsafe extern "C" fn(id: GLuint, pname: GLenum, params: *mut GLint)>;
extern "C" {
    pub static mut glad_glGetVariantArrayObjectivATI: PFNGLGETVARIANTARRAYOBJECTIVATIPROC;
}
extern "C" {
    pub static mut GLAD_GL_EXT_blend_color: ::std::os::raw::c_int;
}
pub type PFNGLBLENDCOLOREXTPROC = ::std::option::Option<
    unsafe extern "C" fn(red: GLfloat, green: GLfloat, blue: GLfloat, alpha: GLfloat),
>;
extern "C" {
    pub static mut glad_glBlendColorEXT: PFNGLBLENDCOLOREXTPROC;
}
extern "C" {
    pub static mut GLAD_GL_EXT_blend_equation_separate: ::std::os::raw::c_int;
}
pub type PFNGLBLENDEQUATIONSEPARATEEXTPROC =
    ::std::option::Option<unsafe extern "C" fn(modeRGB: GLenum, modeAlpha: GLenum)>;
extern "C" {
    pub static mut glad_glBlendEquationSeparateEXT: PFNGLBLENDEQUATIONSEPARATEEXTPROC;
}
extern "C" {
    pub static mut GLAD_GL_EXT_blend_func_separate: ::std::os::raw::c_int;
}
pub type PFNGLBLENDFUNCSEPARATEEXTPROC = ::std::option::Option<
    unsafe extern "C" fn(
        sfactorRGB: GLenum,
        dfactorRGB: GLenum,
        sfactorAlpha: GLenum,
        dfactorAlpha: GLenum,
    ),
>;
extern "C" {
    pub static mut glad_glBlendFuncSeparateEXT: PFNGLBLENDFUNCSEPARATEEXTPROC;
}
extern "C" {
    pub static mut GLAD_GL_EXT_debug_marker: ::std::os::raw::c_int;
}
pub type PFNGLINSERTEVENTMARKEREXTPROC =
    ::std::option::Option<unsafe extern "C" fn(length: GLsizei, marker: *const GLchar)>;
extern "C" {
    pub static mut glad_glInsertEventMarkerEXT: PFNGLINSERTEVENTMARKEREXTPROC;
}
pub type PFNGLPUSHGROUPMARKEREXTPROC =
    ::std::option::Option<unsafe extern "C" fn(length: GLsizei, marker: *const GLchar)>;
extern "C" {
    pub static mut glad_glPushGroupMarkerEXT: PFNGLPUSHGROUPMARKEREXTPROC;
}
pub type PFNGLPOPGROUPMARKEREXTPROC = ::std::option::Option<unsafe extern "C" fn()>;
extern "C" {
    pub static mut glad_glPopGroupMarkerEXT: PFNGLPOPGROUPMARKEREXTPROC;
}
extern "C" {
    pub static mut GLAD_GL_EXT_framebuffer_blit: ::std::os::raw::c_int;
}
pub type PFNGLBLITFRAMEBUFFEREXTPROC = ::std::option::Option<
    unsafe extern "C" fn(
        srcX0: GLint,
        srcY0: GLint,
        srcX1: GLint,
        srcY1: GLint,
        dstX0: GLint,
        dstY0: GLint,
        dstX1: GLint,
        dstY1: GLint,
        mask: GLbitfield,
        filter: GLenum,
    ),
>;
extern "C" {
    pub static mut glad_glBlitFramebufferEXT: PFNGLBLITFRAMEBUFFEREXTPROC;
}
extern "C" {
    pub static mut GLAD_GL_EXT_framebuffer_multisample: ::std::os::raw::c_int;
}
pub type PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        samples: GLsizei,
        internalformat: GLenum,
        width: GLsizei,
        height: GLsizei,
    ),
>;
extern "C" {
    pub static mut glad_glRenderbufferStorageMultisampleEXT:
        PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC;
}
extern "C" {
    pub static mut GLAD_GL_EXT_framebuffer_multisample_blit_scaled: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut GLAD_GL_EXT_framebuffer_object: ::std::os::raw::c_int;
}
pub type PFNGLISRENDERBUFFEREXTPROC =
    ::std::option::Option<unsafe extern "C" fn(renderbuffer: GLuint) -> GLboolean>;
extern "C" {
    pub static mut glad_glIsRenderbufferEXT: PFNGLISRENDERBUFFEREXTPROC;
}
pub type PFNGLBINDRENDERBUFFEREXTPROC =
    ::std::option::Option<unsafe extern "C" fn(target: GLenum, renderbuffer: GLuint)>;
extern "C" {
    pub static mut glad_glBindRenderbufferEXT: PFNGLBINDRENDERBUFFEREXTPROC;
}
pub type PFNGLDELETERENDERBUFFERSEXTPROC =
    ::std::option::Option<unsafe extern "C" fn(n: GLsizei, renderbuffers: *const GLuint)>;
extern "C" {
    pub static mut glad_glDeleteRenderbuffersEXT: PFNGLDELETERENDERBUFFERSEXTPROC;
}
pub type PFNGLGENRENDERBUFFERSEXTPROC =
    ::std::option::Option<unsafe extern "C" fn(n: GLsizei, renderbuffers: *mut GLuint)>;
extern "C" {
    pub static mut glad_glGenRenderbuffersEXT: PFNGLGENRENDERBUFFERSEXTPROC;
}
pub type PFNGLRENDERBUFFERSTORAGEEXTPROC = ::std::option::Option<
    unsafe extern "C" fn(target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei),
>;
extern "C" {
    pub static mut glad_glRenderbufferStorageEXT: PFNGLRENDERBUFFERSTORAGEEXTPROC;
}
pub type PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC =
    ::std::option::Option<unsafe extern "C" fn(target: GLenum, pname: GLenum, params: *mut GLint)>;
extern "C" {
    pub static mut glad_glGetRenderbufferParameterivEXT: PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC;
}
pub type PFNGLISFRAMEBUFFEREXTPROC =
    ::std::option::Option<unsafe extern "C" fn(framebuffer: GLuint) -> GLboolean>;
extern "C" {
    pub static mut glad_glIsFramebufferEXT: PFNGLISFRAMEBUFFEREXTPROC;
}
pub type PFNGLBINDFRAMEBUFFEREXTPROC =
    ::std::option::Option<unsafe extern "C" fn(target: GLenum, framebuffer: GLuint)>;
extern "C" {
    pub static mut glad_glBindFramebufferEXT: PFNGLBINDFRAMEBUFFEREXTPROC;
}
pub type PFNGLDELETEFRAMEBUFFERSEXTPROC =
    ::std::option::Option<unsafe extern "C" fn(n: GLsizei, framebuffers: *const GLuint)>;
extern "C" {
    pub static mut glad_glDeleteFramebuffersEXT: PFNGLDELETEFRAMEBUFFERSEXTPROC;
}
pub type PFNGLGENFRAMEBUFFERSEXTPROC =
    ::std::option::Option<unsafe extern "C" fn(n: GLsizei, framebuffers: *mut GLuint)>;
extern "C" {
    pub static mut glad_glGenFramebuffersEXT: PFNGLGENFRAMEBUFFERSEXTPROC;
}
pub type PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC =
    ::std::option::Option<unsafe extern "C" fn(target: GLenum) -> GLenum>;
extern "C" {
    pub static mut glad_glCheckFramebufferStatusEXT: PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC;
}
pub type PFNGLFRAMEBUFFERTEXTURE1DEXTPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        attachment: GLenum,
        textarget: GLenum,
        texture: GLuint,
        level: GLint,
    ),
>;
extern "C" {
    pub static mut glad_glFramebufferTexture1DEXT: PFNGLFRAMEBUFFERTEXTURE1DEXTPROC;
}
pub type PFNGLFRAMEBUFFERTEXTURE2DEXTPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        attachment: GLenum,
        textarget: GLenum,
        texture: GLuint,
        level: GLint,
    ),
>;
extern "C" {
    pub static mut glad_glFramebufferTexture2DEXT: PFNGLFRAMEBUFFERTEXTURE2DEXTPROC;
}
pub type PFNGLFRAMEBUFFERTEXTURE3DEXTPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        attachment: GLenum,
        textarget: GLenum,
        texture: GLuint,
        level: GLint,
        zoffset: GLint,
    ),
>;
extern "C" {
    pub static mut glad_glFramebufferTexture3DEXT: PFNGLFRAMEBUFFERTEXTURE3DEXTPROC;
}
pub type PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC = ::std::option::Option<
    unsafe extern "C" fn(
        target: GLenum,
        attachment: GLenum,
        renderbuffertarget: GLenum,
        renderbuffer: GLuint,
    ),
>;
extern "C" {
    pub static mut glad_glFramebufferRenderbufferEXT: PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC;
}
pub type PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC = ::std::option::Option<
    unsafe extern "C" fn(target: GLenum, attachment: GLenum, pname: GLenum, params: *mut GLint),
>;
extern "C" {
    pub static mut glad_glGetFramebufferAttachmentParameterivEXT:
        PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC;
}
pub type PFNGLGENERATEMIPMAPEXTPROC = ::std::option::Option<unsafe extern "C" fn(target: GLenum)>;
extern "C" {
    pub static mut glad_glGenerateMipmapEXT: PFNGLGENERATEMIPMAPEXTPROC;
}
extern "C" {
    pub static mut GLAD_GL_EXT_framebuffer_sRGB: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut GLAD_GL_EXT_index_array_formats: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut GLAD_GL_EXT_texture: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut GLAD_GL_EXT_texture_compression_s3tc: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut GLAD_GL_EXT_texture_sRGB: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut GLAD_GL_EXT_texture_swizzle: ::std::os::raw::c_int;
}
extern "C" {
    pub static mut GLAD_GL_EXT_vertex_array: ::std::os::raw::c_int;
}
pub type PFNGLARRAYELEMENTEXTPROC = ::std::option::Option<unsafe extern "C" fn(i: GLint)>;
extern "C" {
    pub static mut glad_glArrayElementEXT: PFNGLARRAYELEMENTEXTPROC;
}
pub type PFNGLCOLORPOINTEREXTPROC = ::std::option::Option<
    unsafe extern "C" fn(
        size: GLint,
        type_: GLenum,
        stride: GLsizei,
        count: GLsizei,
        pointer: *const ::std::os::raw::c_void,
    ),
>;
extern "C" {
    pub static mut glad_glColorPointerEXT: PFNGLCOLORPOINTEREXTPROC;
}
pub type PFNGLDRAWARRAYSEXTPROC =
    ::std::option::Option<unsafe extern "C" fn(mode: GLenum, first: GLint, count: GLsizei)>;
extern "C" {
    pub static mut glad_glDrawArraysEXT: PFNGLDRAWARRAYSEXTPROC;
}
pub type PFNGLEDGEFLAGPOINTEREXTPROC = ::std::option::Option<
    unsafe extern "C" fn(stride: GLsizei, count: GLsizei, pointer: *const GLboolean),
>;
extern "C" {
    pub static mut glad_glEdgeFlagPointerEXT: PFNGLEDGEFLAGPOINTEREXTPROC;
}
pub type PFNGLGETPOINTERVEXTPROC = ::std::option::Option<
    unsafe extern "C" fn(pname: GLenum, params: *mut *mut ::std::os::raw::c_void),
>;
extern "C" {
    pub static mut glad_glGetPointervEXT: PFNGLGETPOINTERVEXTPROC;
}
pub type PFNGLINDEXPOINTEREXTPROC = ::std::option::Option<
    unsafe extern "C" fn(
        type_: GLenum,
        stride: GLsizei,
        count: GLsizei,
        pointer: *const ::std::os::raw::c_void,
    ),
>;
extern "C" {
    pub static mut glad_glIndexPointerEXT: PFNGLINDEXPOINTEREXTPROC;
}
pub type PFNGLNORMALPOINTEREXTPROC = ::std::option::Option<
    unsafe extern "C" fn(
        type_: GLenum,
        stride: GLsizei,
        count: GLsizei,
        pointer: *const ::std::os::raw::c_void,
    ),
>;
extern "C" {
    pub static mut glad_glNormalPointerEXT: PFNGLNORMALPOINTEREXTPROC;
}
pub type PFNGLTEXCOORDPOINTEREXTPROC = ::std::option::Option<
    unsafe extern "C" fn(
        size: GLint,
        type_: GLenum,
        stride: GLsizei,
        count: GLsizei,
        pointer: *const ::std::os::raw::c_void,
    ),
>;
extern "C" {
    pub static mut glad_glTexCoordPointerEXT: PFNGLTEXCOORDPOINTEREXTPROC;
}
pub type PFNGLVERTEXPOINTEREXTPROC = ::std::option::Option<
    unsafe extern "C" fn(
        size: GLint,
        type_: GLenum,
        stride: GLsizei,
        count: GLsizei,
        pointer: *const ::std::os::raw::c_void,
    ),
>;
extern "C" {
    pub static mut glad_glVertexPointerEXT: PFNGLVERTEXPOINTEREXTPROC;
}
extern "C" {
    pub static mut GLAD_GL_EXT_vertex_shader: ::std::os::raw::c_int;
}
pub type PFNGLBEGINVERTEXSHADEREXTPROC = ::std::option::Option<unsafe extern "C" fn()>;
extern "C" {
    pub static mut glad_glBeginVertexShaderEXT: PFNGLBEGINVERTEXSHADEREXTPROC;
}
pub type PFNGLENDVERTEXSHADEREXTPROC = ::std::option::Option<unsafe extern "C" fn()>;
extern "C" {
    pub static mut glad_glEndVertexShaderEXT: PFNGLENDVERTEXSHADEREXTPROC;
}
pub type PFNGLBINDVERTEXSHADEREXTPROC = ::std::option::Option<unsafe extern "C" fn(id: GLuint)>;
extern "C" {
    pub static mut glad_glBindVertexShaderEXT: PFNGLBINDVERTEXSHADEREXTPROC;
}
pub type PFNGLGENVERTEXSHADERSEXTPROC =
    ::std::option::Option<unsafe extern "C" fn(range: GLuint) -> GLuint>;
extern "C" {
    pub static mut glad_glGenVertexShadersEXT: PFNGLGENVERTEXSHADERSEXTPROC;
}
pub type PFNGLDELETEVERTEXSHADEREXTPROC = ::std::option::Option<unsafe extern "C" fn(id: GLuint)>;
extern "C" {
    pub static mut glad_glDeleteVertexShaderEXT: PFNGLDELETEVERTEXSHADEREXTPROC;
}
pub type PFNGLSHADEROP1EXTPROC =
    ::std::option::Option<unsafe extern "C" fn(op: GLenum, res: GLuint, arg1: GLuint)>;
extern "C" {
    pub static mut glad_glShaderOp1EXT: PFNGLSHADEROP1EXTPROC;
}
pub type PFNGLSHADEROP2EXTPROC = ::std::option::Option<
    unsafe extern "C" fn(op: GLenum, res: GLuint, arg1: GLuint, arg2: GLuint),
>;
extern "C" {
    pub static mut glad_glShaderOp2EXT: PFNGLSHADEROP2EXTPROC;
}
pub type PFNGLSHADEROP3EXTPROC = ::std::option::Option<
    unsafe extern "C" fn(op: GLenum, res: GLuint, arg1: GLuint, arg2: GLuint, arg3: GLuint),
>;
extern "C" {
    pub static mut glad_glShaderOp3EXT: PFNGLSHADEROP3EXTPROC;
}
pub type PFNGLSWIZZLEEXTPROC = ::std::option::Option<
    unsafe extern "C" fn(
        res: GLuint,
        in_: GLuint,
        outX: GLenum,
        outY: GLenum,
        outZ: GLenum,
        outW: GLenum,
    ),
>;
extern "C" {
    pub static mut glad_glSwizzleEXT: PFNGLSWIZZLEEXTPROC;
}
pub type PFNGLWRITEMASKEXTPROC = ::std::option::Option<
    unsafe extern "C" fn(
        res: GLuint,
        in_: GLuint,
        outX: GLenum,
        outY: GLenum,
        outZ: GLenum,
        outW: GLenum,
    ),
>;
extern "C" {
    pub static mut glad_glWriteMaskEXT: PFNGLWRITEMASKEXTPROC;
}
pub type PFNGLINSERTCOMPONENTEXTPROC =
    ::std::option::Option<unsafe extern "C" fn(res: GLuint, src: GLuint, num: GLuint)>;
extern "C" {
    pub static mut glad_glInsertComponentEXT: PFNGLINSERTCOMPONENTEXTPROC;
}
pub type PFNGLEXTRACTCOMPONENTEXTPROC =
    ::std::option::Option<unsafe extern "C" fn(res: GLuint, src: GLuint, num: GLuint)>;
extern "C" {
    pub static mut glad_glExtractComponentEXT: PFNGLEXTRACTCOMPONENTEXTPROC;
}
pub type PFNGLGENSYMBOLSEXTPROC = ::std::option::Option<
    unsafe extern "C" fn(
        datatype: GLenum,
        storagetype: GLenum,
        range: GLenum,
        components: GLuint,
    ) -> GLuint,
>;
extern "C" {
    pub static mut glad_glGenSymbolsEXT: PFNGLGENSYMBOLSEXTPROC;
}
pub type PFNGLSETINVARIANTEXTPROC = ::std::option::Option<
    unsafe extern "C" fn(id: GLuint, type_: GLenum, addr: *const ::std::os::raw::c_void),
>;
extern "C" {
    pub static mut glad_glSetInvariantEXT: PFNGLSETINVARIANTEXTPROC;
}
pub type PFNGLSETLOCALCONSTANTEXTPROC = ::std::option::Option<
    unsafe extern "C" fn(id: GLuint, type_: GLenum, addr: *const ::std::os::raw::c_void),
>;
extern "C" {
    pub static mut glad_glSetLocalConstantEXT: PFNGLSETLOCALCONSTANTEXTPROC;
}
pub type PFNGLVARIANTBVEXTPROC =
    ::std::option::Option<unsafe extern "C" fn(id: GLuint, addr: *const GLbyte)>;
extern "C" {
    pub static mut glad_glVariantbvEXT: PFNGLVARIANTBVEXTPROC;
}
pub type PFNGLVARIANTSVEXTPROC =
    ::std::option::Option<unsafe extern "C" fn(id: GLuint, addr: *const GLshort)>;
extern "C" {
    pub static mut glad_glVariantsvEXT: PFNGLVARIANTSVEXTPROC;
}
pub type PFNGLVARIANTIVEXTPROC =
    ::std::option::Option<unsafe extern "C" fn(id: GLuint, addr: *const GLint)>;
extern "C" {
    pub static mut glad_glVariantivEXT: PFNGLVARIANTIVEXTPROC;
}
pub type PFNGLVARIANTFVEXTPROC =
    ::std::option::Option<unsafe extern "C" fn(id: GLuint, addr: *const GLfloat)>;
extern "C" {
    pub static mut glad_glVariantfvEXT: PFNGLVARIANTFVEXTPROC;
}
pub type PFNGLVARIANTDVEXTPROC =
    ::std::option::Option<unsafe extern "C" fn(id: GLuint, addr: *const GLdouble)>;
extern "C" {
    pub static mut glad_glVariantdvEXT: PFNGLVARIANTDVEXTPROC;
}
pub type PFNGLVARIANTUBVEXTPROC =
    ::std::option::Option<unsafe extern "C" fn(id: GLuint, addr: *const GLubyte)>;
extern "C" {
    pub static mut glad_glVariantubvEXT: PFNGLVARIANTUBVEXTPROC;
}
pub type PFNGLVARIANTUSVEXTPROC =
    ::std::option::Option<unsafe extern "C" fn(id: GLuint, addr: *const GLushort)>;
extern "C" {
    pub static mut glad_glVariantusvEXT: PFNGLVARIANTUSVEXTPROC;
}
pub type PFNGLVARIANTUIVEXTPROC =
    ::std::option::Option<unsafe extern "C" fn(id: GLuint, addr: *const GLuint)>;
extern "C" {
    pub static mut glad_glVariantuivEXT: PFNGLVARIANTUIVEXTPROC;
}
pub type PFNGLVARIANTPOINTEREXTPROC = ::std::option::Option<
    unsafe extern "C" fn(
        id: GLuint,
        type_: GLenum,
        stride: GLuint,
        addr: *const ::std::os::raw::c_void,
    ),
>;
extern "C" {
    pub static mut glad_glVariantPointerEXT: PFNGLVARIANTPOINTEREXTPROC;
}
pub type PFNGLENABLEVARIANTCLIENTSTATEEXTPROC =
    ::std::option::Option<unsafe extern "C" fn(id: GLuint)>;
extern "C" {
    pub static mut glad_glEnableVariantClientStateEXT: PFNGLENABLEVARIANTCLIENTSTATEEXTPROC;
}
pub type PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC =
    ::std::option::Option<unsafe extern "C" fn(id: GLuint)>;
extern "C" {
    pub static mut glad_glDisableVariantClientStateEXT: PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC;
}
pub type PFNGLBINDLIGHTPARAMETEREXTPROC =
    ::std::option::Option<unsafe extern "C" fn(light: GLenum, value: GLenum) -> GLuint>;
extern "C" {
    pub static mut glad_glBindLightParameterEXT: PFNGLBINDLIGHTPARAMETEREXTPROC;
}
pub type PFNGLBINDMATERIALPARAMETEREXTPROC =
    ::std::option::Option<unsafe extern "C" fn(face: GLenum, value: GLenum) -> GLuint>;
extern "C" {
    pub static mut glad_glBindMaterialParameterEXT: PFNGLBINDMATERIALPARAMETEREXTPROC;
}
pub type PFNGLBINDTEXGENPARAMETEREXTPROC = ::std::option::Option<
    unsafe extern "C" fn(unit: GLenum, coord: GLenum, value: GLenum) -> GLuint,
>;
extern "C" {
    pub static mut glad_glBindTexGenParameterEXT: PFNGLBINDTEXGENPARAMETEREXTPROC;
}
pub type PFNGLBINDTEXTUREUNITPARAMETEREXTPROC =
    ::std::option::Option<unsafe extern "C" fn(unit: GLenum, value: GLenum) -> GLuint>;
extern "C" {
    pub static mut glad_glBindTextureUnitParameterEXT: PFNGLBINDTEXTUREUNITPARAMETEREXTPROC;
}
pub type PFNGLBINDPARAMETEREXTPROC =
    ::std::option::Option<unsafe extern "C" fn(value: GLenum) -> GLuint>;
extern "C" {
    pub static mut glad_glBindParameterEXT: PFNGLBINDPARAMETEREXTPROC;
}
pub type PFNGLISVARIANTENABLEDEXTPROC =
    ::std::option::Option<unsafe extern "C" fn(id: GLuint, cap: GLenum) -> GLboolean>;
extern "C" {
    pub static mut glad_glIsVariantEnabledEXT: PFNGLISVARIANTENABLEDEXTPROC;
}
pub type PFNGLGETVARIANTBOOLEANVEXTPROC =
    ::std::option::Option<unsafe extern "C" fn(id: GLuint, value: GLenum, data: *mut GLboolean)>;
extern "C" {
    pub static mut glad_glGetVariantBooleanvEXT: PFNGLGETVARIANTBOOLEANVEXTPROC;
}
pub type PFNGLGETVARIANTINTEGERVEXTPROC =
    ::std::option::Option<unsafe extern "C" fn(id: GLuint, value: GLenum, data: *mut GLint)>;
extern "C" {
    pub static mut glad_glGetVariantIntegervEXT: PFNGLGETVARIANTINTEGERVEXTPROC;
}
pub type PFNGLGETVARIANTFLOATVEXTPROC =
    ::std::option::Option<unsafe extern "C" fn(id: GLuint, value: GLenum, data: *mut GLfloat)>;
extern "C" {
    pub static mut glad_glGetVariantFloatvEXT: PFNGLGETVARIANTFLOATVEXTPROC;
}
pub type PFNGLGETVARIANTPOINTERVEXTPROC = ::std::option::Option<
    unsafe extern "C" fn(id: GLuint, value: GLenum, data: *mut *mut ::std::os::raw::c_void),
>;
extern "C" {
    pub static mut glad_glGetVariantPointervEXT: PFNGLGETVARIANTPOINTERVEXTPROC;
}
pub type PFNGLGETINVARIANTBOOLEANVEXTPROC =
    ::std::option::Option<unsafe extern "C" fn(id: GLuint, value: GLenum, data: *mut GLboolean)>;
extern "C" {
    pub static mut glad_glGetInvariantBooleanvEXT: PFNGLGETINVARIANTBOOLEANVEXTPROC;
}
pub type PFNGLGETINVARIANTINTEGERVEXTPROC =
    ::std::option::Option<unsafe extern "C" fn(id: GLuint, value: GLenum, data: *mut GLint)>;
extern "C" {
    pub static mut glad_glGetInvariantIntegervEXT: PFNGLGETINVARIANTINTEGERVEXTPROC;
}
pub type PFNGLGETINVARIANTFLOATVEXTPROC =
    ::std::option::Option<unsafe extern "C" fn(id: GLuint, value: GLenum, data: *mut GLfloat)>;
extern "C" {
    pub static mut glad_glGetInvariantFloatvEXT: PFNGLGETINVARIANTFLOATVEXTPROC;
}
pub type PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC =
    ::std::option::Option<unsafe extern "C" fn(id: GLuint, value: GLenum, data: *mut GLboolean)>;
extern "C" {
    pub static mut glad_glGetLocalConstantBooleanvEXT: PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC;
}
pub type PFNGLGETLOCALCONSTANTINTEGERVEXTPROC =
    ::std::option::Option<unsafe extern "C" fn(id: GLuint, value: GLenum, data: *mut GLint)>;
extern "C" {
    pub static mut glad_glGetLocalConstantIntegervEXT: PFNGLGETLOCALCONSTANTINTEGERVEXTPROC;
}
pub type PFNGLGETLOCALCONSTANTFLOATVEXTPROC =
    ::std::option::Option<unsafe extern "C" fn(id: GLuint, value: GLenum, data: *mut GLfloat)>;
extern "C" {
    pub static mut glad_glGetLocalConstantFloatvEXT: PFNGLGETLOCALCONSTANTFLOATVEXTPROC;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _iobuf {
    pub _Placeholder: *mut ::std::os::raw::c_void,
}


















